.table levelInitial
----
application/datalog

.table inputFrom
----
application/datalog

level{time: T, level: L} :-
  levelInitial{time: T, level: L} |
  levelStep{time: T, level: L}.
----
application/datalog

levelStep{time: T, level: NextLevel} :-
  PrevT + 1 = T &
  level{time: PrevT, level: PrevLevel} &
  input{time: T, current: Input} &
  PrevLevel + Input = NextLevel.
----
application/datalog

input{time: T, current: C} :-
  sum[T, C: inputFrom{time: T, current: C}].
----
application/datalog

level{}?
----
application/datalog

.ruleGraph
----
application/graphviz
digraph G {
  "11" [fillcolor="" fontname="Courier" label="11: Agg(sum[T, C: inputFrom{current: C, time: T}]) []" shape="box" style="filled"];
  "levelInitial" [fillcolor="darksalmon" fontname="Courier" label="levelInitial:  []" shape="box" style="filled"];
  "level" [fillcolor="lightblue" fontname="Courier" label="level: Subst(level{level: L, time: T}) []" shape="box" style="filled"];
  "input" [fillcolor="lightblue" fontname="Courier" label="input: Subst(input{current: C, time: T}) []" shape="box" style="filled"];
  "0" [fillcolor="moccasin" fontname="Courier" label="0: Union []" shape="box" style="filled"];
  "levelStep" [fillcolor="lightblue" fontname="Courier" label="levelStep: Subst(levelStep{level: NextLevel, time: T}) []" shape="box" style="filled"];
  "1" [fillcolor="darkseagreen2" fontname="Courier" label="1: Match(levelInitial{level: L, time: T}) []" shape="box" style="filled"];
  "2" [fillcolor="darkseagreen2" fontname="Courier" label="2: Match(levelStep{level: L, time: T}) []" shape="box" style="filled"];
  "3" [fillcolor="" fontname="Courier" label="3: Builtin(base.add{a: PrevT, b: 1, res: T}) [PrevT]" shape="box" style="filled"];
  "4" [fillcolor="darkseagreen2" fontname="Courier" label="4: Match(level{level: PrevLevel, time: PrevT}) [PrevT]" shape="box" style="filled"];
  "inputFrom" [fillcolor="darksalmon" fontname="Courier" label="inputFrom:  []" shape="box" style="filled"];
  "5" [fillcolor="thistle" fontname="Courier" label="5: Join(PrevT) [T]" shape="box" style="filled"];
  "6" [fillcolor="darkseagreen2" fontname="Courier" label="6: Match(input{current: Input, time: T}) [T]" shape="box" style="filled"];
  "7" [fillcolor="thistle" fontname="Courier" label="7: Join(T) [Input-PrevLevel]" shape="box" style="filled"];
  "8" [fillcolor="" fontname="Courier" label="8: Builtin(base.add{a: PrevLevel, b: Input, res: NextLevel}) [Input-PrevLevel]" shape="box" style="filled"];
  "9" [fillcolor="thistle" fontname="Courier" label="9: Join(Input, PrevLevel) []" shape="box" style="filled"];
  "10" [fillcolor="darkseagreen2" fontname="Courier" label="10: Match(inputFrom{current: C, time: T}) []" shape="box" style="filled"];
  "11" -> "input" [];
  "levelInitial" -> "1" [];
  "level" -> "4" [];
  "input" -> "6" [];
  "0" -> "level" [];
  "levelStep" -> "2" [];
  "1" -> "0" [];
  "2" -> "0" [];
  "3" -> "5" [];
  "4" -> "5" [];
  "inputFrom" -> "10" [];
  "5" -> "7" [];
  "6" -> "7" [];
  "7" -> "9" [];
  "8" -> "9" [];
  "9" -> "levelStep" [];
  "10" -> "11" [];
}

levelInitial{time: 1, level: 5}.
----
application/datalog
step{input: bindings{bindings: {"L": 5, "T": 1}}, multiplicity: 1, node: "0", output: bindings{bindings: {"L": 5, "T": 1}}, step: 2}.
step{input: bindings{bindings: {"L": 5, "T": 1}}, multiplicity: 1, node: "level", output: record{rec: level{level: 5, time: 1}}, step: 3}.
step{input: bindings{bindings: {"PrevLevel": 5, "PrevT": 1}}, multiplicity: 1, node: "5", output: bindings{bindings: {"PrevLevel": 5, "PrevT": 1, "T": 2}}, step: 5}.
step{input: record{rec: levelInitial{level: 5, time: 1}}, multiplicity: 1, node: "1", output: bindings{bindings: {"L": 5, "T": 1}}, step: 1}.
step{input: record{rec: levelInitial{level: 5, time: 1}}, multiplicity: 1, node: "levelInitial", output: record{rec: levelInitial{level: 5, time: 1}}, step: 0}.
step{input: record{rec: level{level: 5, time: 1}}, multiplicity: 1, node: "4", output: bindings{bindings: {"PrevLevel": 5, "PrevT": 1}}, step: 4}.

inputFrom{id: 1, time: 2, current: 2}.
----
application/datalog
step{input: bindings{bindings: {"C": 0, "T": 2}}, multiplicity: -1, node: "input", output: record{rec: input{current: 0, time: 2}}, step: 3}.
step{input: bindings{bindings: {"C": 2, "T": 2}}, multiplicity: -1, node: "11", output: bindings{bindings: {"C": 0, "T": 2}}, step: 2}.
step{input: bindings{bindings: {"C": 2, "T": 2}}, multiplicity: 1, node: "11", output: bindings{bindings: {"C": 2, "T": 2}}, step: 2}.
step{input: bindings{bindings: {"C": 2, "T": 2}}, multiplicity: 1, node: "input", output: record{rec: input{current: 2, time: 2}}, step: 4}.
step{input: bindings{bindings: {"Input": 0, "NextLevel": 5, "PrevLevel": 5, "PrevT": 1, "T": 2}}, multiplicity: -1, node: "levelStep", output: record{rec: levelStep{level: 5, time: 2}}, step: 11}.
step{input: bindings{bindings: {"Input": 0, "PrevLevel": 5, "PrevT": 1, "T": 2}}, multiplicity: -1, node: "9", output: bindings{bindings: {"Input": 0, "NextLevel": 5, "PrevLevel": 5, "PrevT": 1, "T": 2}}, step: 9}.
step{input: bindings{bindings: {"Input": 0, "T": 2}}, multiplicity: -1, node: "7", output: bindings{bindings: {"Input": 0, "PrevLevel": 5, "PrevT": 1, "T": 2}}, step: 7}.
step{input: bindings{bindings: {"Input": 2, "NextLevel": 7, "PrevLevel": 5, "PrevT": 1, "T": 2}}, multiplicity: 1, node: "levelStep", output: record{rec: levelStep{level: 7, time: 2}}, step: 12}.
step{input: bindings{bindings: {"Input": 2, "PrevLevel": 5, "PrevT": 1, "T": 2}}, multiplicity: 1, node: "9", output: bindings{bindings: {"Input": 2, "NextLevel": 7, "PrevLevel": 5, "PrevT": 1, "T": 2}}, step: 10}.
step{input: bindings{bindings: {"Input": 2, "T": 2}}, multiplicity: 1, node: "7", output: bindings{bindings: {"Input": 2, "PrevLevel": 5, "PrevT": 1, "T": 2}}, step: 8}.
step{input: bindings{bindings: {"L": 5, "T": 2}}, multiplicity: -1, node: "0", output: bindings{bindings: {"L": 5, "T": 2}}, step: 15}.
step{input: bindings{bindings: {"L": 5, "T": 2}}, multiplicity: -1, node: "level", output: record{rec: level{level: 5, time: 2}}, step: 17}.
step{input: bindings{bindings: {"L": 7, "T": 2}}, multiplicity: 1, node: "0", output: bindings{bindings: {"L": 7, "T": 2}}, step: 16}.
step{input: bindings{bindings: {"L": 7, "T": 2}}, multiplicity: 1, node: "level", output: record{rec: level{level: 7, time: 2}}, step: 18}.
step{input: bindings{bindings: {"PrevLevel": 5, "PrevT": 2}}, multiplicity: -1, node: "5", output: bindings{bindings: {"PrevLevel": 5, "PrevT": 2, "T": 3}}, step: 21}.
step{input: bindings{bindings: {"PrevLevel": 7, "PrevT": 2}}, multiplicity: 1, node: "5", output: bindings{bindings: {"PrevLevel": 7, "PrevT": 2, "T": 3}}, step: 22}.
step{input: record{rec: inputFrom{current: 2, id: 1, time: 2}}, multiplicity: 1, node: "10", output: bindings{bindings: {"C": 2, "T": 2}}, step: 1}.
step{input: record{rec: inputFrom{current: 2, id: 1, time: 2}}, multiplicity: 1, node: "inputFrom", output: record{rec: inputFrom{current: 2, id: 1, time: 2}}, step: 0}.
step{input: record{rec: input{current: 0, time: 2}}, multiplicity: -1, node: "6", output: bindings{bindings: {"Input": 0, "T": 2}}, step: 5}.
step{input: record{rec: input{current: 2, time: 2}}, multiplicity: 1, node: "6", output: bindings{bindings: {"Input": 2, "T": 2}}, step: 6}.
step{input: record{rec: levelStep{level: 5, time: 2}}, multiplicity: -1, node: "2", output: bindings{bindings: {"L": 5, "T": 2}}, step: 13}.
step{input: record{rec: levelStep{level: 7, time: 2}}, multiplicity: 1, node: "2", output: bindings{bindings: {"L": 7, "T": 2}}, step: 14}.
step{input: record{rec: level{level: 5, time: 2}}, multiplicity: -1, node: "4", output: bindings{bindings: {"PrevLevel": 5, "PrevT": 2}}, step: 19}.
step{input: record{rec: level{level: 7, time: 2}}, multiplicity: 1, node: "4", output: bindings{bindings: {"PrevLevel": 7, "PrevT": 2}}, step: 20}.

level{}?
----
application/datalog
level{level: 5, time: 1}.
level{level: 7, time: 2}.
