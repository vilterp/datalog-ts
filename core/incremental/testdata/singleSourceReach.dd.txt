.table edge
----
application/datalog

.table start
----
application/datalog

start{node: "x"}.
----
incremental-datalog/trace
start: [start{node: "x"}+1]

reach{node: B} :-
  start{node: B} |
  reach{node: A} &
  edge{from: A, to: B}.
----
application/datalog

reach{}?
----
application/datalog
reach{node: "x"}.

.ruleGraph
----
application/graphviz
digraph G {
  "edge" [fillcolor="darksalmon" fontname="Courier" label="edge:  []" shape="box" style="filled"];
  "start" [fillcolor="darksalmon" fontname="Courier" label="start:  []" shape="box" style="filled"];
  "0" [fillcolor="moccasin" fontname="Courier" label="0: Union []" shape="box" style="filled"];
  "1" [fillcolor="darkseagreen2" fontname="Courier" label="1: Match(start{node: B}) []" shape="box" style="filled"];
  "2" [fillcolor="darkseagreen2" fontname="Courier" label="2: Match(reach{node: A}) [A]" shape="box" style="filled"];
  "3" [fillcolor="darkseagreen2" fontname="Courier" label="3: Match(edge{from: A, to: B}) [A]" shape="box" style="filled"];
  "4" [fillcolor="thistle" fontname="Courier" label="4: Join(A) []" shape="box" style="filled"];
  "5" [fillcolor="" fontname="Courier" label="5: Distinct []" shape="box" style="filled"];
  "reach" [fillcolor="lightblue" fontname="Courier" label="reach: Subst(reach{node: B}) []" shape="box" style="filled"];
  "start" -> "1" [];
  "1" -> "0" [];
  "reach" -> "2" [];
  "edge" -> "3" [];
  "3" -> "4" [];
  "2" -> "4" [];
  "4" -> "0" [];
  "0" -> "5" [];
  "5" -> "reach" [];
}

reach{}?
----
application/datalog
reach{node: "x"}.
