.table mother
----
application/datalog

.table father
----
application/datalog

parent{child: C, parent: P} :-
  mother{child: C, mother: P} | father{child: C, father: P}.
----
application/datalog

grandparent{grandchild: A, grandparent: C} :-
  parent{child: A, parent: B} &
  parent{child: B, parent: C}.
----
application/datalog

father{child: "Mary", father: "Mark"}.
----
incremental-datalog/trace
father (BaseFactTable): [father{child: "Mary", father: "Mark"}+1]
2 (Match): [{C: "Mary", P: "Mark"}+1]
0 (Union): [{C: "Mary", P: "Mark"}+1]
parent (Substitute): [parent{child: "Mary", parent: "Mark"}+1]
3 (Match): [{A: "Mary", B: "Mark"}+1]
4 (Match): [{B: "Mary", C: "Mark"}+1]
5 (Join): []
5 (Join): []

mother{child: "Pete", mother: "Mary"}.
----
incremental-datalog/trace
mother (BaseFactTable): [mother{child: "Pete", mother: "Mary"}+1]
1 (Match): [{C: "Pete", P: "Mary"}+1]
0 (Union): [{C: "Pete", P: "Mary"}+1]
parent (Substitute): [parent{child: "Pete", parent: "Mary"}+1]
3 (Match): [{A: "Pete", B: "Mary"}+1]
4 (Match): [{B: "Pete", C: "Mary"}+1]
5 (Join): [{A: "Pete", B: "Mary", C: "Mark"}+1]
5 (Join): []
grandparent (Substitute): [grandparent{grandchild: "Pete", grandparent: "Mark"}+1]

mother{child: "Carolyn", mother: "Mary"}.
----
incremental-datalog/trace
mother (BaseFactTable): [mother{child: "Carolyn", mother: "Mary"}+1]
1 (Match): [{C: "Carolyn", P: "Mary"}+1]
0 (Union): [{C: "Carolyn", P: "Mary"}+1]
parent (Substitute): [parent{child: "Carolyn", parent: "Mary"}+1]
3 (Match): [{A: "Carolyn", B: "Mary"}+1]
4 (Match): [{B: "Carolyn", C: "Mary"}+1]
5 (Join): [{A: "Carolyn", B: "Mary", C: "Mark"}+1]
5 (Join): []
grandparent (Substitute): [grandparent{grandchild: "Carolyn", grandparent: "Mark"}+1]
