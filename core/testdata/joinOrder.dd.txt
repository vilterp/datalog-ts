graph
ide.DefnForCursor{defnSpan: DS} :-
  ide.Cursor{idx: CIdx} &
  scope.Var{span: span{from: FIdx, to: TIdx}, name: N, scopeID: Scope} &
  FIdx <= CIdx & CIdx <= TIdx &
  scope.Usage{name: N, usageScopeID: Scope, defnSpan: DS}.
----
application/graphviz
digraph G {
  "0" [label="ide.Cursor" shape="box"];
  "1" [label="scope.Var" shape="box"];
  "2" [label="base.lte" shape="box"];
  "3" [label="base.lte" shape="box"];
  "4" [label="scope.Usage" shape="box"];
  "5" [label="CIdx"];
  "6" [label="FIdx"];
  "7" [label="TIdx"];
  "8" [label="N"];
  "9" [label="Scope"];
  "10" [label="DS"];
  "0" -> "5" [label="idx"];
  "1" -> "6" [label="span.from"];
  "1" -> "7" [label="span.from"];
  "1" -> "8" [label="span.from"];
  "1" -> "9" [label="span.from"];
  "2" -> "6" [label="span.to"];
  "2" -> "5" [label="span.to"];
  "3" -> "5" [label="name"];
  "3" -> "7" [label="name"];
  "4" -> "8" [label="scopeID"];
  "4" -> "9" [label="scopeID"];
  "4" -> "10" [label="scopeID"];
}

joinOrder
ide.DefnForCursor{defnSpan: DS} :-
  ide.Cursor{idx: CIdx} &
  scope.Var{span: span{from: FIdx, to: TIdx}, name: N, scopeID: Scope} &
  FIdx <= CIdx & CIdx <= TIdx &
  scope.Usage{name: N, usageScopeID: Scope, defnSpan: DS}.
----
application/json
[
  "scope.Usage",
  "base.lte",
  "base.lte",
  "scope.Var",
  "ide.Cursor"
]

varOrder
ide.DefnForCursor{defnSpan: DS} :-
  ide.Cursor{idx: CIdx} &
  scope.Var{span: span{from: FIdx, to: TIdx}, name: N, scopeID: Scope} &
  FIdx <= CIdx & CIdx <= TIdx &
  scope.Usage{name: N, usageScopeID: Scope, defnSpan: DS}.
----
application/json
[
  "DS",
  "Scope",
  "N",
  "TIdx",
  "FIdx",
  "CIdx"
]
