time{time: T} :-
  range{from: 1, to: 10, val: T}.
levelInit{time: 1, val: 1}.
levelStep{time: T, val: V} :-
  time{time: T} &
  T = PrevT + 1 &
  level{time: PrevT, val: PrevV} &
  V = PrevV + 1.
level{time: T, val: V} :-
  levelInit{time: T, val: V} |
  levelStep{time: T, val: V}.
level{}?
----
application/datalog
level{time: 1, val: 1}.
level{time: 10, val: 10}.
level{time: 2, val: 2}.
level{time: 3, val: 3}.
level{time: 4, val: 4}.
level{time: 5, val: 5}.
level{time: 6, val: 6}.
level{time: 7, val: 7}.
level{time: 8, val: 8}.
level{time: 9, val: 9}.

.table source
.table sink
.table battery
.table connection
source{id: 1, phaseShift: 0, baseline: 30, amplitude: 10, pos: pos{x: 10, y: 20}}.
source{id: 4, phaseShift: 0, baseline: 30, amplitude: 15, pos: pos{x: 330, y: 20}}.
battery{id: 2, capacity: 100, initialLevel: 50, pos: pos{x: 170, y: 250}}.
sink{id: 3, demand: 15, pos: pos{x: 170, y: 450}}.
connection{from: 1, to: 2}.
connection{from: 2, to: 3}.
connection{from: 4, to: 2}.
batteryLevel{id: I, time: T, level: L} :-
  batteryLevelInitial{id: I, time: T, level: L} |
  batteryLevelStep{id: I, time: T, level: L}.
batteryLevelInitial{id: I, time: 1, level: L} :-
  battery{id: I, initialLevel: L}.
currentAtSource{id: I, time: T, level: Clamped} :-
  time2{time: T} &
  source{id: I, baseline: Baseline, amplitude: Size, phaseShift: PhaseShift} &
  T + PhaseShift = ShiftedT &
  math.sin{a: ShiftedT, res: Raw} &
  Raw * Size = C &
  Baseline + C = ShiftedL &
  clamp{min: 0, max: 1000, val: ShiftedL, res: Clamped}.
currentAtSink{id: I, time: T, level: ShiftedL} :-
  time2{time: T} &
  T + 2 = ShiftedT &
  sink{id: I, demand: Size} &
  math.sin{a: ShiftedT, res: Raw} &
  Raw + Size = C &
  30 + C = ShiftedL.
batteryLevelStep{id: I, time: T, level: NextLevel} :-
  battery{id: I, capacity: Capacity} &
  time2{time: PrevT} &
  PrevT + 1 = T &
  batteryLevel{id: I, time: PrevT, level: PrevLevel} &
  batteryLevelDelta{id: I, time: T, delta: InputCurrent} &
  PrevLevel + InputCurrent = NotClamped &
  clamp{min: 0, max: Capacity, val: NotClamped, res: NextLevel}.
batteryLevelDelta{id: B, time: T, delta: Delta} :-
  batteryInputCurrent{id: B, time: T, current: Input} &
  batteryOutputCurrent{id: B, time: T, current: PosOutput} &
  invert{a: PosOutput, res: Output} &
  Input + Output = Delta.
batteryInputCurrentFrom{id: B, time: T, current: L, from: S} :-
  time2{time: T} &
  battery{id: B} &
  source{id: S} &
  connection{from: S, to: B} &
  currentAtSource{id: S, time: T, level: L}.
batteryInputCurrent{id: B, time: T, current: C} :-
  sum[B, T, C: batteryInputCurrentFrom{id: B, time: T, current: C}].
batteryOutputCurrent{id: B, time: T, current: L} :-
  time2{time: T} &
  battery{id: B} &
  sink{id: S} &
  connection{from: B, to: S} &
  currentAtSink{id: S, time: T, level: L}.
time2{time: T} :-
  range{from: 1, to: 10, val: T}.
batteryLevel{}?
----
application/datalog
batteryLevel{id: 2, level: 100, time: 10}.
batteryLevel{id: 2, level: 100, time: 3}.
batteryLevel{id: 2, level: 100, time: 7}.
batteryLevel{id: 2, level: 100, time: 8}.
batteryLevel{id: 2, level: 100, time: 9}.
batteryLevel{id: 2, level: 50, time: 1}.
batteryLevel{id: 2, level: 86.72925965020347, time: 5}.
batteryLevel{id: 2, level: 88.48923816594998, time: 2}.
batteryLevel{id: 2, level: 93.75451394860694, time: 6}.
batteryLevel{id: 2, level: 96.35935311550072, time: 4}.
