.table mother
----
text/plain

.table father
----
text/plain

parent{child: C, parent: P} :-
  mother{child: C, mother: P} | father{child: C, father: P}.
----
text/propagation-log

grandparent{grandchild: A, grandparent: C} :-
  parent{child: A, parent: B} &
  parent{child: B, parent: C}.
----
text/propagation-log

.rulegraph
----
application/graphviz
digraph G {
  "0" [fillcolor="moccasin" label="0: Union []" shape="box" style="filled"];
  "1" [fillcolor="darkseagreen2" label="1: Match(mother{child: C, mother: P}; {}) []" shape="box" style="filled"];
  "2" [fillcolor="darkseagreen2" label="2: Match(father{child: C, father: P}; {}) []" shape="box" style="filled"];
  "3" [fillcolor="darkseagreen2" label="3: Match(parent{child: A, parent: B}; {C: A, P: B}) [B]" shape="box" style="filled"];
  "4" [fillcolor="darkseagreen2" label="4: Match(parent{child: B, parent: C}; {C: B, P: C}) [B]" shape="box" style="filled"];
  "5" [fillcolor="thistle" label="5: Join(grandparent, [B]) []" shape="box" style="filled"];
  "mother" [fillcolor="darksalmon" label="mother:  []" shape="box" style="filled"];
  "father" [fillcolor="darksalmon" label="father:  []" shape="box" style="filled"];
  "parent" [fillcolor="lightblue" label="parent: Subst({child: C, parent: P}) []" shape="box" style="filled"];
  "grandparent" [fillcolor="lightblue" label="grandparent: Subst({grandchild: A, grandparent: C}) []" shape="box" style="filled"];
  "0" -> "parent" [];
  "1" -> "0" [];
  "2" -> "0" [];
  "3" -> "5" [];
  "4" -> "5" [];
  "5" -> "grandparent" [];
  "father" -> "2" [];
  "mother" -> "1" [];
  "parent" -> "3" [];
  "parent" -> "4" [];
}

father{child: "Mary", father: "Mark"}.
----
text/propagation-log
father from null: father{child: "Mary", father: "Mark"}; {}. 
  father{child: "Mary", father: "Mark"}; {}
2 from father: father{child: "Mary", father: "Mark"}; {}. Match(father{child: C, father: P}; {})
  father{child: "Mary", father: "Mark"}; {C: "Mary", P: "Mark"}
0 from 2: father{child: "Mary", father: "Mark"}; {C: "Mary", P: "Mark"}. Union
  father{child: "Mary", father: "Mark"}; {C: "Mary", P: "Mark"}
parent from 0: father{child: "Mary", father: "Mark"}; {C: "Mary", P: "Mark"}. Subst({child: C, parent: P})
  parent{child: "Mary", parent: "Mark"}; {C: "Mary", P: "Mark"}
3 from parent: parent{child: "Mary", parent: "Mark"}; {C: "Mary", P: "Mark"}. Match(parent{child: A, parent: B}; {C: A, P: B})
  parent{child: "Mary", parent: "Mark"}; {A: "Mary", B: "Mark"}
4 from parent: parent{child: "Mary", parent: "Mark"}; {C: "Mary", P: "Mark"}. Match(parent{child: B, parent: C}; {C: B, P: C})
  parent{child: "Mary", parent: "Mark"}; {B: "Mary", C: "Mark"}
5 from 3: parent{child: "Mary", parent: "Mark"}; {A: "Mary", B: "Mark"}. Join(grandparent, [B])
5 from 4: parent{child: "Mary", parent: "Mark"}; {B: "Mary", C: "Mark"}. Join(grandparent, [B])

mother{child: "Pete", mother: "Mary"}.
----
text/propagation-log
mother from null: mother{child: "Pete", mother: "Mary"}; {}. 
  mother{child: "Pete", mother: "Mary"}; {}
1 from mother: mother{child: "Pete", mother: "Mary"}; {}. Match(mother{child: C, mother: P}; {})
  mother{child: "Pete", mother: "Mary"}; {C: "Pete", P: "Mary"}
0 from 1: mother{child: "Pete", mother: "Mary"}; {C: "Pete", P: "Mary"}. Union
  mother{child: "Pete", mother: "Mary"}; {C: "Pete", P: "Mary"}
parent from 0: mother{child: "Pete", mother: "Mary"}; {C: "Pete", P: "Mary"}. Subst({child: C, parent: P})
  parent{child: "Pete", parent: "Mary"}; {C: "Pete", P: "Mary"}
3 from parent: parent{child: "Pete", parent: "Mary"}; {C: "Pete", P: "Mary"}. Match(parent{child: A, parent: B}; {C: A, P: B})
  parent{child: "Pete", parent: "Mary"}; {A: "Pete", B: "Mary"}
4 from parent: parent{child: "Pete", parent: "Mary"}; {C: "Pete", P: "Mary"}. Match(parent{child: B, parent: C}; {C: B, P: C})
  parent{child: "Pete", parent: "Mary"}; {B: "Pete", C: "Mary"}
5 from 3: parent{child: "Pete", parent: "Mary"}; {A: "Pete", B: "Mary"}. Join(grandparent, [B])
  grandparent{child: "Pete", parent: "Mary"}; {A: "Pete", B: "Mary", C: "Mark"}
5 from 4: parent{child: "Pete", parent: "Mary"}; {B: "Pete", C: "Mary"}. Join(grandparent, [B])
grandparent from 5: grandparent{child: "Pete", parent: "Mary"}; {A: "Pete", B: "Mary", C: "Mark"}. Subst({grandchild: A, grandparent: C})
  grandparent{grandchild: "Pete", grandparent: "Mark"}; {A: "Pete", B: "Mary", C: "Mark"}

mother{child: "Carolyn", mother: "Mary"}.
----
text/propagation-log
mother from null: mother{child: "Carolyn", mother: "Mary"}; {}. 
  mother{child: "Carolyn", mother: "Mary"}; {}
1 from mother: mother{child: "Carolyn", mother: "Mary"}; {}. Match(mother{child: C, mother: P}; {})
  mother{child: "Carolyn", mother: "Mary"}; {C: "Carolyn", P: "Mary"}
0 from 1: mother{child: "Carolyn", mother: "Mary"}; {C: "Carolyn", P: "Mary"}. Union
  mother{child: "Carolyn", mother: "Mary"}; {C: "Carolyn", P: "Mary"}
parent from 0: mother{child: "Carolyn", mother: "Mary"}; {C: "Carolyn", P: "Mary"}. Subst({child: C, parent: P})
  parent{child: "Carolyn", parent: "Mary"}; {C: "Carolyn", P: "Mary"}
3 from parent: parent{child: "Carolyn", parent: "Mary"}; {C: "Carolyn", P: "Mary"}. Match(parent{child: A, parent: B}; {C: A, P: B})
  parent{child: "Carolyn", parent: "Mary"}; {A: "Carolyn", B: "Mary"}
4 from parent: parent{child: "Carolyn", parent: "Mary"}; {C: "Carolyn", P: "Mary"}. Match(parent{child: B, parent: C}; {C: B, P: C})
  parent{child: "Carolyn", parent: "Mary"}; {B: "Carolyn", C: "Mary"}
5 from 3: parent{child: "Carolyn", parent: "Mary"}; {A: "Carolyn", B: "Mary"}. Join(grandparent, [B])
  grandparent{child: "Carolyn", parent: "Mary"}; {A: "Carolyn", B: "Mary", C: "Mark"}
5 from 4: parent{child: "Carolyn", parent: "Mary"}; {B: "Carolyn", C: "Mary"}. Join(grandparent, [B])
grandparent from 5: grandparent{child: "Carolyn", parent: "Mary"}; {A: "Carolyn", B: "Mary", C: "Mark"}. Subst({grandchild: A, grandparent: C})
  grandparent{grandchild: "Carolyn", grandparent: "Mark"}; {A: "Carolyn", B: "Mary", C: "Mark"}
