.load fp/dl/ast.dl
----
text/plain

.load fp/dl/typecheck.dl
----
text/plain

lang.Builtin{name: "intToString", type: tapp{from: "int", to: "string"}}.
----
text/propagation-log
lang.Builtin from null: lang.Builtin{name: "intToString", type: tapp{from: "int", to: "string"}}; {}. 
  lang.Builtin{name: "intToString", type: tapp{from: "int", to: "string"}}; {}
59 from lang.Builtin: lang.Builtin{name: "intToString", type: tapp{from: "int", to: "string"}}; {}. Match(lang.Builtin{name: N, type: T}; {})
  lang.Builtin{name: "intToString", type: tapp{from: "int", to: "string"}}; {N: "intToString", T: tapp{from: "int", to: "string"}}
60 from 59: lang.Builtin{name: "intToString", type: tapp{from: "int", to: "string"}}; {N: "intToString", T: tapp{from: "int", to: "string"}}. Join(tc.scopeBuiltin, )

.rulegraph
----
application/graphviz
digraph G {
  "0" [fillcolor="moccasin" label="0: Union []" shape="box" style="filled"];
  "1" [fillcolor="darkseagreen2" label="1: Match(ast.StringLit{id: I, location: S}; {}) []" shape="box" style="filled"];
  "2" [fillcolor="darkseagreen2" label="2: Match(ast.IntLit{id: I, location: S}; {}) []" shape="box" style="filled"];
  "3" [fillcolor="darkseagreen2" label="3: Match(ast.Var{id: I, location: S}; {}) []" shape="box" style="filled"];
  "4" [fillcolor="darkseagreen2" label="4: Match(ast.LetExpr{id: I, location: S}; {}) []" shape="box" style="filled"];
  "5" [fillcolor="darkseagreen2" label="5: Match(ast.FuncCall{id: I, location: S}; {}) []" shape="box" style="filled"];
  "6" [fillcolor="darkseagreen2" label="6: Match(ast.Lambda{id: I, location: S}; {}) []" shape="box" style="filled"];
  "7" [fillcolor="darkseagreen2" label="7: Match(ast.Placeholder{id: I, location: S}; {}) []" shape="box" style="filled"];
  "8" [fillcolor="moccasin" label="8: Union []" shape="box" style="filled"];
  "9" [fillcolor="darkseagreen2" label="9: Match(ast.Expr{id: I, location: S}; {I: I, S: S}) [I]" shape="box" style="filled"];
  "10" [fillcolor="darkseagreen2" label="10: Match(ast.LetExpr{bodyID: I, id: P}; {}) [I]" shape="box" style="filled"];
  "11" [fillcolor="thistle" label="11: Join(ast.ParentExpr, I: 10.bodyID = 9.id) []" shape="box" style="filled"];
  "12" [fillcolor="darkseagreen2" label="12: Match(ast.Expr{id: I, location: S}; {I: I, S: S}) [I]" shape="box" style="filled"];
  "13" [fillcolor="darkseagreen2" label="13: Match(ast.LetExpr{bindingID: I, id: P}; {}) [I]" shape="box" style="filled"];
  "14" [fillcolor="thistle" label="14: Join(ast.ParentExpr, I: 13.bindingID = 12.id) []" shape="box" style="filled"];
  "15" [fillcolor="darkseagreen2" label="15: Match(ast.Expr{id: I, location: S}; {I: I, S: S}) [I]" shape="box" style="filled"];
  "16" [fillcolor="darkseagreen2" label="16: Match(ast.FuncCall{funcID: I, id: P}; {}) [I]" shape="box" style="filled"];
  "17" [fillcolor="thistle" label="17: Join(ast.ParentExpr, I: 16.funcID = 15.id) []" shape="box" style="filled"];
  "18" [fillcolor="darkseagreen2" label="18: Match(ast.Expr{id: I, location: S}; {I: I, S: S}) [I]" shape="box" style="filled"];
  "19" [fillcolor="darkseagreen2" label="19: Match(ast.FuncCall{argID: I, id: P}; {}) [I]" shape="box" style="filled"];
  "20" [fillcolor="thistle" label="20: Join(ast.ParentExpr, I: 19.argID = 18.id) []" shape="box" style="filled"];
  "21" [fillcolor="darkseagreen2" label="21: Match(ast.Expr{id: I, location: S}; {I: I, S: S}) [I]" shape="box" style="filled"];
  "22" [fillcolor="darkseagreen2" label="22: Match(ast.Lambda{body: I, id: P}; {}) [I]" shape="box" style="filled"];
  "23" [fillcolor="thistle" label="23: Join(ast.ParentExpr, I: 22.body = 21.id) []" shape="box" style="filled"];
  "24" [fillcolor="moccasin" label="24: Union []" shape="box" style="filled"];
  "25" [fillcolor="darkseagreen2" label="25: Match(tc.typeS{id: I, type: T}; {I: I}) []" shape="box" style="filled"];
  "26" [fillcolor="darkseagreen2" label="26: Match(tc.typeI{id: I, type: T}; {I: I}) []" shape="box" style="filled"];
  "27" [fillcolor="darkseagreen2" label="27: Match(tc.typeLambda{id: I, type: T}; {I: I}) []" shape="box" style="filled"];
  "28" [fillcolor="darkseagreen2" label="28: Match(tc.typeFC{id: I, type: T}; {I: I, T: T}) []" shape="box" style="filled"];
  "29" [fillcolor="darkseagreen2" label="29: Match(tc.typeLet{id: I, type: T}; {I: I, T: T}) []" shape="box" style="filled"];
  "30" [fillcolor="darkseagreen2" label="30: Match(tc.typeVar{id: I, type: T}; {I: I, T: T}) []" shape="box" style="filled"];
  "31" [fillcolor="darkseagreen2" label="31: Match(tc.typePlaceholder{id: I, type: T}; {I: I}) []" shape="box" style="filled"];
  "32" [fillcolor="darkseagreen2" label="32: Match(ast.StringLit{id: I}; {}) []" shape="box" style="filled"];
  "33" [fillcolor="darkseagreen2" label="33: Match(ast.IntLit{id: I}; {}) []" shape="box" style="filled"];
  "34" [fillcolor="darkseagreen2" label="34: Match(ast.FuncCall{argID: AID, funcID: FID, id: I}; {}) [FID]" shape="box" style="filled"];
  "35" [fillcolor="darkseagreen2" label="35: Match(tc.Type{id: FID, type: tapp{from: F, to: T}}; {I: FID}) [FID]" shape="box" style="filled"];
  "36" [fillcolor="thistle" label="36: Join(tc.typeFC, FID: 35.id = 34.funcID) [F]" shape="box" style="filled"];
  "37" [fillcolor="darkseagreen2" label="37: Match(tc.Type{id: AID, type: F}; {I: AID, T: F}) [F]" shape="box" style="filled"];
  "38" [fillcolor="thistle" label="38: Join(tc.typeFC, F: 37.type = 36.type.from) []" shape="box" style="filled"];
  "39" [fillcolor="darkseagreen2" label="39: Match(ast.LetExpr{bodyID: BID, id: I}; {}) [BID]" shape="box" style="filled"];
  "40" [fillcolor="darkseagreen2" label="40: Match(tc.Type{id: BID, type: T}; {I: BID, T: T}) [BID]" shape="box" style="filled"];
  "41" [fillcolor="thistle" label="41: Join(tc.typeLet, BID: 40.id = 39.bodyID) []" shape="box" style="filled"];
  "42" [fillcolor="darkseagreen2" label="42: Match(ast.Var{id: I, name: N}; {}) [I-N]" shape="box" style="filled"];
  "43" [fillcolor="darkseagreen2" label="43: Match(tc.ScopeItem{id: I, name: N, type: T}; {I: I, N: N, T: T}) [I-N]" shape="box" style="filled"];
  "44" [fillcolor="thistle" label="44: Join(tc.typeVar, I: 43.id = 42.id & N: 43.name = 42.name) []" shape="box" style="filled"];
  "45" [fillcolor="darkseagreen2" label="45: Match(ast.Lambda{body: B, id: I, retType: R}; {}) [I]" shape="box" style="filled"];
  "46" [fillcolor="darkseagreen2" label="46: Match(ast.LambdaParam{lambdaID: I, ty: F}; {}) [I]" shape="box" style="filled"];
  "47" [fillcolor="thistle" label="47: Join(tc.typeLambda, I: 46.lambdaID = 45.id) []" shape="box" style="filled"];
  "48" [fillcolor="darkseagreen2" label="48: Match(tc.Type{id: B, type: R}; {I: B, T: R}) []" shape="box" style="filled"];
  "49" [fillcolor="thistle" label="49: Join(tc.typeLambda, ) []" shape="box" style="filled"];
  "50" [fillcolor="darkseagreen2" label="50: Match(ast.Placeholder{id: I}; {}) []" shape="box" style="filled"];
  "51" [fillcolor="moccasin" label="51: Union []" shape="box" style="filled"];
  "52" [fillcolor="darkseagreen2" label="52: Match(tc.scopeBuiltin{id: I, location: L, name: N, type: T}; {I: I, N: N, T: T}) []" shape="box" style="filled"];
  "53" [fillcolor="darkseagreen2" label="53: Match(tc.scopeLet{id: I, location: L, name: N, type: T}; {I: I, L: L, N: N, T: T}) []" shape="box" style="filled"];
  "54" [fillcolor="darkseagreen2" label="54: Match(tc.scopeLambda{id: I, location: L, name: N, type: T}; {I: I, L: L, N: N, T: T}) []" shape="box" style="filled"];
  "55" [fillcolor="darkseagreen2" label="55: Match(tc.parentScope{id: I, parentID: P}; {I: I, P: P}) [P]" shape="box" style="filled"];
  "56" [fillcolor="darkseagreen2" label="56: Match(tc.ScopeItem{id: P, location: L, name: N, type: T}; {I: P, L: L, N: N, T: T}) [P]" shape="box" style="filled"];
  "57" [fillcolor="thistle" label="57: Join(tc.ScopeItem, P: 56.id = 55.parentID) []" shape="box" style="filled"];
  "58" [fillcolor="darkseagreen2" label="58: Match(ast.RootExpr{id: I}; {}) []" shape="box" style="filled"];
  "59" [fillcolor="darkseagreen2" label="59: Match(lang.Builtin{name: N, type: T}; {}) []" shape="box" style="filled"]; // cache: [lang.Builtin{name: "intToString", type: tapp{from: "int", to: "string"}}; {N: "intToString", T: tapp{from: "int", to: "string"}}]
  "60" [fillcolor="thistle" label="60: Join(tc.scopeBuiltin, ) []" shape="box" style="filled"];
  "61" [fillcolor="darkseagreen2" label="61: Match(ast.LetExpr{bindingID: B, bodyID: I, varLoc: L, varName: N}; {}) [B]" shape="box" style="filled"];
  "62" [fillcolor="darkseagreen2" label="62: Match(tc.Type{id: B, type: T}; {I: B, T: T}) [B]" shape="box" style="filled"];
  "63" [fillcolor="thistle" label="63: Join(tc.scopeLet, B: 62.id = 61.bindingID) []" shape="box" style="filled"];
  "64" [fillcolor="darkseagreen2" label="64: Match(ast.Lambda{body: I, id: LID}; {}) [LID]" shape="box" style="filled"];
  "65" [fillcolor="darkseagreen2" label="65: Match(ast.LambdaParam{lambdaID: LID, location: L, name: N, ty: T}; {}) [LID]" shape="box" style="filled"];
  "66" [fillcolor="thistle" label="66: Join(tc.scopeLambda, LID: 65.lambdaID = 64.id) []" shape="box" style="filled"];
  "67" [fillcolor="moccasin" label="67: Union []" shape="box" style="filled"];
  "68" [fillcolor="darkseagreen2" label="68: Match(ast.LetExpr{bodyID: I, id: P}; {}) []" shape="box" style="filled"];
  "69" [fillcolor="darkseagreen2" label="69: Match(ast.LetExpr{bindingID: I, id: P}; {}) []" shape="box" style="filled"];
  "70" [fillcolor="darkseagreen2" label="70: Match(ast.FuncCall{argID: I, id: P}; {}) []" shape="box" style="filled"];
  "71" [fillcolor="darkseagreen2" label="71: Match(ast.FuncCall{funcID: I, id: P}; {}) []" shape="box" style="filled"];
  "72" [fillcolor="darkseagreen2" label="72: Match(ast.Lambda{body: I, id: P}; {}) []" shape="box" style="filled"];
  "ast.RootExpr" [fillcolor="darksalmon" label="ast.RootExpr:  []" shape="box" style="filled"];
  "ast.StringLit" [fillcolor="darksalmon" label="ast.StringLit:  []" shape="box" style="filled"];
  "ast.IntLit" [fillcolor="darksalmon" label="ast.IntLit:  []" shape="box" style="filled"];
  "ast.LetExpr" [fillcolor="darksalmon" label="ast.LetExpr:  []" shape="box" style="filled"];
  "ast.Lambda" [fillcolor="darksalmon" label="ast.Lambda:  []" shape="box" style="filled"];
  "ast.LambdaParam" [fillcolor="darksalmon" label="ast.LambdaParam:  []" shape="box" style="filled"];
  "ast.FuncCall" [fillcolor="darksalmon" label="ast.FuncCall:  []" shape="box" style="filled"];
  "ast.Var" [fillcolor="darksalmon" label="ast.Var:  []" shape="box" style="filled"];
  "ast.Placeholder" [fillcolor="darksalmon" label="ast.Placeholder:  []" shape="box" style="filled"];
  "ast.Expr" [fillcolor="lightblue" label="ast.Expr: Subst({id: I, location: S}) []" shape="box" style="filled"];
  "ast.ParentExpr" [fillcolor="lightblue" label="ast.ParentExpr: Subst({id: I, parent: P, span: S}) []" shape="box" style="filled"];
  "lang.Builtin" [fillcolor="darksalmon" label="lang.Builtin:  []" shape="box" style="filled"]; // cache: [lang.Builtin{name: "intToString", type: tapp{from: "int", to: "string"}}; {}]
  "tc.Type" [fillcolor="lightblue" label="tc.Type: Subst({id: I, type: T}) []" shape="box" style="filled"];
  "tc.typeS" [fillcolor="lightblue" label="tc.typeS: Subst({id: I, type: \"string\"}) []" shape="box" style="filled"];
  "tc.typeI" [fillcolor="lightblue" label="tc.typeI: Subst({id: I, type: \"int\"}) []" shape="box" style="filled"];
  "tc.typeFC" [fillcolor="lightblue" label="tc.typeFC: Subst({id: I, type: T}) []" shape="box" style="filled"];
  "tc.typeLet" [fillcolor="lightblue" label="tc.typeLet: Subst({id: I, type: T}) []" shape="box" style="filled"];
  "tc.typeVar" [fillcolor="lightblue" label="tc.typeVar: Subst({id: I, type: T}) []" shape="box" style="filled"];
  "tc.typeLambda" [fillcolor="lightblue" label="tc.typeLambda: Subst({id: I, type: tapp{from: F, to: R}}) []" shape="box" style="filled"];
  "tc.typePlaceholder" [fillcolor="lightblue" label="tc.typePlaceholder: Subst({id: I, type: \"unknown\"}) []" shape="box" style="filled"];
  "tc.ScopeItem" [fillcolor="lightblue" label="tc.ScopeItem: Subst({id: I, location: L, name: N, type: T}) []" shape="box" style="filled"];
  "tc.scopeBuiltin" [fillcolor="lightblue" label="tc.scopeBuiltin: Subst({id: I, location: \"builtin\", name: N, type: T}) []" shape="box" style="filled"];
  "tc.scopeLet" [fillcolor="lightblue" label="tc.scopeLet: Subst({id: I, location: L, name: N, type: T}) []" shape="box" style="filled"];
  "tc.scopeLambda" [fillcolor="lightblue" label="tc.scopeLambda: Subst({id: I, location: L, name: N, type: T}) []" shape="box" style="filled"];
  "tc.parentScope" [fillcolor="lightblue" label="tc.parentScope: Subst({id: I, parentID: P}) []" shape="box" style="filled"];
  "0" -> "ast.Expr" [];
  "1" -> "0" [];
  "10" -> "11" [];
  "11" -> "8" [];
  "12" -> "14" [];
  "13" -> "14" [];
  "14" -> "8" [];
  "15" -> "17" [];
  "16" -> "17" [];
  "17" -> "8" [];
  "18" -> "20" [];
  "19" -> "20" [];
  "2" -> "0" [];
  "20" -> "8" [];
  "21" -> "23" [];
  "22" -> "23" [];
  "23" -> "8" [];
  "24" -> "tc.Type" [];
  "25" -> "24" [];
  "26" -> "24" [];
  "27" -> "24" [];
  "28" -> "24" [];
  "29" -> "24" [];
  "3" -> "0" [];
  "30" -> "24" [];
  "31" -> "24" [];
  "32" -> "tc.typeS" [];
  "33" -> "tc.typeI" [];
  "34" -> "36" [];
  "35" -> "36" [];
  "36" -> "38" [];
  "37" -> "38" [];
  "38" -> "tc.typeFC" [];
  "39" -> "41" [];
  "4" -> "0" [];
  "40" -> "41" [];
  "41" -> "tc.typeLet" [];
  "42" -> "44" [];
  "43" -> "44" [];
  "44" -> "tc.typeVar" [];
  "45" -> "47" [];
  "46" -> "47" [];
  "47" -> "49" [];
  "48" -> "49" [];
  "49" -> "tc.typeLambda" [];
  "5" -> "0" [];
  "50" -> "tc.typePlaceholder" [];
  "51" -> "tc.ScopeItem" [];
  "52" -> "51" [];
  "53" -> "51" [];
  "54" -> "51" [];
  "55" -> "57" [];
  "56" -> "57" [];
  "57" -> "51" [];
  "58" -> "60" [];
  "59" -> "60" [];
  "6" -> "0" [];
  "60" -> "tc.scopeBuiltin" [];
  "61" -> "63" [];
  "62" -> "63" [];
  "63" -> "tc.scopeLet" [];
  "64" -> "66" [];
  "65" -> "66" [];
  "66" -> "tc.scopeLambda" [];
  "67" -> "tc.parentScope" [];
  "68" -> "67" [];
  "69" -> "67" [];
  "7" -> "0" [];
  "70" -> "67" [];
  "71" -> "67" [];
  "72" -> "67" [];
  "8" -> "ast.ParentExpr" [];
  "9" -> "11" [];
  "ast.Expr" -> "9" [];
  "ast.Expr" -> "12" [];
  "ast.Expr" -> "15" [];
  "ast.Expr" -> "18" [];
  "ast.Expr" -> "21" [];
  "ast.FuncCall" -> "5" [];
  "ast.FuncCall" -> "16" [];
  "ast.FuncCall" -> "19" [];
  "ast.FuncCall" -> "34" [];
  "ast.FuncCall" -> "70" [];
  "ast.FuncCall" -> "71" [];
  "ast.IntLit" -> "2" [];
  "ast.IntLit" -> "33" [];
  "ast.Lambda" -> "6" [];
  "ast.Lambda" -> "22" [];
  "ast.Lambda" -> "45" [];
  "ast.Lambda" -> "64" [];
  "ast.Lambda" -> "72" [];
  "ast.LambdaParam" -> "46" [];
  "ast.LambdaParam" -> "65" [];
  "ast.LetExpr" -> "4" [];
  "ast.LetExpr" -> "10" [];
  "ast.LetExpr" -> "13" [];
  "ast.LetExpr" -> "39" [];
  "ast.LetExpr" -> "61" [];
  "ast.LetExpr" -> "68" [];
  "ast.LetExpr" -> "69" [];
  "ast.Placeholder" -> "7" [];
  "ast.Placeholder" -> "50" [];
  "ast.RootExpr" -> "58" [];
  "ast.StringLit" -> "1" [];
  "ast.StringLit" -> "32" [];
  "ast.Var" -> "3" [];
  "ast.Var" -> "42" [];
  "lang.Builtin" -> "59" [];
  "tc.ScopeItem" -> "43" [];
  "tc.ScopeItem" -> "56" [];
  "tc.Type" -> "35" [];
  "tc.Type" -> "37" [];
  "tc.Type" -> "40" [];
  "tc.Type" -> "48" [];
  "tc.Type" -> "62" [];
  "tc.parentScope" -> "55" [];
  "tc.scopeBuiltin" -> "52" [];
  "tc.scopeLambda" -> "54" [];
  "tc.scopeLet" -> "53" [];
  "tc.typeFC" -> "28" [];
  "tc.typeI" -> "26" [];
  "tc.typeLambda" -> "27" [];
  "tc.typeLet" -> "29" [];
  "tc.typePlaceholder" -> "31" [];
  "tc.typeS" -> "25" [];
  "tc.typeVar" -> "30" [];
}

ast.RootExpr{id: 0}.
----
text/propagation-log
ast.RootExpr from null: ast.RootExpr{id: 0}; {}. 
  ast.RootExpr{id: 0}; {}
58 from ast.RootExpr: ast.RootExpr{id: 0}; {}. Match(ast.RootExpr{id: I}; {})
  ast.RootExpr{id: 0}; {I: 0}
60 from 58: ast.RootExpr{id: 0}; {I: 0}. Join(tc.scopeBuiltin, )
  tc.scopeBuiltin{id: 0}; {I: 0, N: "intToString", T: tapp{from: "int", to: "string"}}
tc.scopeBuiltin from 60: tc.scopeBuiltin{id: 0}; {I: 0, N: "intToString", T: tapp{from: "int", to: "string"}}. Subst({id: I, location: "builtin", name: N, type: T})
  tc.scopeBuiltin{id: 0, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 0, N: "intToString", T: tapp{from: "int", to: "string"}}
52 from tc.scopeBuiltin: tc.scopeBuiltin{id: 0, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 0, N: "intToString", T: tapp{from: "int", to: "string"}}. Match(tc.scopeBuiltin{id: I, location: L, name: N, type: T}; {I: I, N: N, T: T})
  tc.scopeBuiltin{id: 0, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 0, L: "builtin", N: "intToString", T: tapp{from: "int", to: "string"}}
51 from 52: tc.scopeBuiltin{id: 0, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 0, L: "builtin", N: "intToString", T: tapp{from: "int", to: "string"}}. Union
  tc.scopeBuiltin{id: 0, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 0, L: "builtin", N: "intToString", T: tapp{from: "int", to: "string"}}
tc.ScopeItem from 51: tc.scopeBuiltin{id: 0, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 0, L: "builtin", N: "intToString", T: tapp{from: "int", to: "string"}}. Subst({id: I, location: L, name: N, type: T})
  tc.ScopeItem{id: 0, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 0, L: "builtin", N: "intToString", T: tapp{from: "int", to: "string"}}
43 from tc.ScopeItem: tc.ScopeItem{id: 0, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 0, L: "builtin", N: "intToString", T: tapp{from: "int", to: "string"}}. Match(tc.ScopeItem{id: I, name: N, type: T}; {I: I, N: N, T: T})
  tc.ScopeItem{id: 0, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 0, N: "intToString", T: tapp{from: "int", to: "string"}}
56 from tc.ScopeItem: tc.ScopeItem{id: 0, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 0, L: "builtin", N: "intToString", T: tapp{from: "int", to: "string"}}. Match(tc.ScopeItem{id: P, location: L, name: N, type: T}; {I: P, L: L, N: N, T: T})
  tc.ScopeItem{id: 0, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}
44 from 43: tc.ScopeItem{id: 0, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 0, N: "intToString", T: tapp{from: "int", to: "string"}}. Join(tc.typeVar, I: 43.id = 42.id & N: 43.name = 42.name)
57 from 56: tc.ScopeItem{id: 0, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}. Join(tc.ScopeItem, P: 56.id = 55.parentID)

ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}.
----
text/propagation-log
ast.FuncCall from null: ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {}. 
  ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {}
5 from ast.FuncCall: ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {}. Match(ast.FuncCall{id: I, location: S}; {})
  ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}
16 from ast.FuncCall: ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {}. Match(ast.FuncCall{funcID: I, id: P}; {})
  ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {I: 1, P: 0}
19 from ast.FuncCall: ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {}. Match(ast.FuncCall{argID: I, id: P}; {})
  ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {I: 2, P: 0}
34 from ast.FuncCall: ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {}. Match(ast.FuncCall{argID: AID, funcID: FID, id: I}; {})
  ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {AID: 2, FID: 1, I: 0}
70 from ast.FuncCall: ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {}. Match(ast.FuncCall{argID: I, id: P}; {})
  ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {I: 2, P: 0}
71 from ast.FuncCall: ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {}. Match(ast.FuncCall{funcID: I, id: P}; {})
  ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {I: 1, P: 0}
0 from 5: ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}. Union
  ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}
17 from 16: ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {I: 1, P: 0}. Join(ast.ParentExpr, I: 16.funcID = 15.id)
20 from 19: ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {I: 2, P: 0}. Join(ast.ParentExpr, I: 19.argID = 18.id)
36 from 34: ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {AID: 2, FID: 1, I: 0}. Join(tc.typeFC, FID: 35.id = 34.funcID)
67 from 70: ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {I: 2, P: 0}. Union
  ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {I: 2, P: 0}
67 from 71: ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {I: 1, P: 0}. Union
  ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {I: 1, P: 0}
ast.Expr from 0: ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}. Subst({id: I, location: S})
  ast.Expr{id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}
tc.parentScope from 67: ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {I: 2, P: 0}. Subst({id: I, parentID: P})
  tc.parentScope{id: 2, parentID: 0}; {I: 2, P: 0}
tc.parentScope from 67: ast.FuncCall{argID: 2, funcID: 1, id: 0, location: span{from: 0, to: 13}}; {I: 1, P: 0}. Subst({id: I, parentID: P})
  tc.parentScope{id: 1, parentID: 0}; {I: 1, P: 0}
9 from ast.Expr: ast.Expr{id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}. Match(ast.Expr{id: I, location: S}; {I: I, S: S})
  ast.Expr{id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}
12 from ast.Expr: ast.Expr{id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}. Match(ast.Expr{id: I, location: S}; {I: I, S: S})
  ast.Expr{id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}
15 from ast.Expr: ast.Expr{id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}. Match(ast.Expr{id: I, location: S}; {I: I, S: S})
  ast.Expr{id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}
18 from ast.Expr: ast.Expr{id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}. Match(ast.Expr{id: I, location: S}; {I: I, S: S})
  ast.Expr{id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}
21 from ast.Expr: ast.Expr{id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}. Match(ast.Expr{id: I, location: S}; {I: I, S: S})
  ast.Expr{id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}
55 from tc.parentScope: tc.parentScope{id: 2, parentID: 0}; {I: 2, P: 0}. Match(tc.parentScope{id: I, parentID: P}; {I: I, P: P})
  tc.parentScope{id: 2, parentID: 0}; {I: 2, P: 0}
55 from tc.parentScope: tc.parentScope{id: 1, parentID: 0}; {I: 1, P: 0}. Match(tc.parentScope{id: I, parentID: P}; {I: I, P: P})
  tc.parentScope{id: 1, parentID: 0}; {I: 1, P: 0}
11 from 9: ast.Expr{id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}. Join(ast.ParentExpr, I: 10.bodyID = 9.id)
14 from 12: ast.Expr{id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}. Join(ast.ParentExpr, I: 13.bindingID = 12.id)
17 from 15: ast.Expr{id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}. Join(ast.ParentExpr, I: 16.funcID = 15.id)
20 from 18: ast.Expr{id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}. Join(ast.ParentExpr, I: 19.argID = 18.id)
23 from 21: ast.Expr{id: 0, location: span{from: 0, to: 13}}; {I: 0, S: span{from: 0, to: 13}}. Join(ast.ParentExpr, I: 22.body = 21.id)
57 from 55: tc.parentScope{id: 2, parentID: 0}; {I: 2, P: 0}. Join(tc.ScopeItem, P: 56.id = 55.parentID)
  tc.ScopeItem{id: 2, parentID: 0}; {I: 2, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}
57 from 55: tc.parentScope{id: 1, parentID: 0}; {I: 1, P: 0}. Join(tc.ScopeItem, P: 56.id = 55.parentID)
  tc.ScopeItem{id: 1, parentID: 0}; {I: 1, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}
51 from 57: tc.ScopeItem{id: 2, parentID: 0}; {I: 2, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}. Union
  tc.ScopeItem{id: 2, parentID: 0}; {I: 2, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}
51 from 57: tc.ScopeItem{id: 1, parentID: 0}; {I: 1, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}. Union
  tc.ScopeItem{id: 1, parentID: 0}; {I: 1, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}
tc.ScopeItem from 51: tc.ScopeItem{id: 2, parentID: 0}; {I: 2, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}. Subst({id: I, location: L, name: N, type: T})
  tc.ScopeItem{id: 2, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 2, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}
tc.ScopeItem from 51: tc.ScopeItem{id: 1, parentID: 0}; {I: 1, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}. Subst({id: I, location: L, name: N, type: T})
  tc.ScopeItem{id: 1, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 1, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}
43 from tc.ScopeItem: tc.ScopeItem{id: 2, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 2, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}. Match(tc.ScopeItem{id: I, name: N, type: T}; {I: I, N: N, T: T})
  tc.ScopeItem{id: 2, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 2, N: "intToString", T: tapp{from: "int", to: "string"}}
56 from tc.ScopeItem: tc.ScopeItem{id: 2, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 2, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}. Match(tc.ScopeItem{id: P, location: L, name: N, type: T}; {I: P, L: L, N: N, T: T})
  tc.ScopeItem{id: 2, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {L: "builtin", N: "intToString", P: 2, T: tapp{from: "int", to: "string"}}
43 from tc.ScopeItem: tc.ScopeItem{id: 1, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 1, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}. Match(tc.ScopeItem{id: I, name: N, type: T}; {I: I, N: N, T: T})
  tc.ScopeItem{id: 1, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 1, N: "intToString", T: tapp{from: "int", to: "string"}}
56 from tc.ScopeItem: tc.ScopeItem{id: 1, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 1, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}. Match(tc.ScopeItem{id: P, location: L, name: N, type: T}; {I: P, L: L, N: N, T: T})
  tc.ScopeItem{id: 1, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {L: "builtin", N: "intToString", P: 1, T: tapp{from: "int", to: "string"}}
44 from 43: tc.ScopeItem{id: 2, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 2, N: "intToString", T: tapp{from: "int", to: "string"}}. Join(tc.typeVar, I: 43.id = 42.id & N: 43.name = 42.name)
57 from 56: tc.ScopeItem{id: 2, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {L: "builtin", N: "intToString", P: 2, T: tapp{from: "int", to: "string"}}. Join(tc.ScopeItem, P: 56.id = 55.parentID)
44 from 43: tc.ScopeItem{id: 1, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 1, N: "intToString", T: tapp{from: "int", to: "string"}}. Join(tc.typeVar, I: 43.id = 42.id & N: 43.name = 42.name)
57 from 56: tc.ScopeItem{id: 1, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {L: "builtin", N: "intToString", P: 1, T: tapp{from: "int", to: "string"}}. Join(tc.ScopeItem, P: 56.id = 55.parentID)

ast.Var{id: 1, location: span{from: 0, to: 10}, name: "int2string"}.
----
text/propagation-log
ast.Var from null: ast.Var{id: 1, location: span{from: 0, to: 10}, name: "int2string"}; {}. 
  ast.Var{id: 1, location: span{from: 0, to: 10}, name: "int2string"}; {}
3 from ast.Var: ast.Var{id: 1, location: span{from: 0, to: 10}, name: "int2string"}; {}. Match(ast.Var{id: I, location: S}; {})
  ast.Var{id: 1, location: span{from: 0, to: 10}, name: "int2string"}; {I: 1, S: span{from: 0, to: 10}}
42 from ast.Var: ast.Var{id: 1, location: span{from: 0, to: 10}, name: "int2string"}; {}. Match(ast.Var{id: I, name: N}; {})
  ast.Var{id: 1, location: span{from: 0, to: 10}, name: "int2string"}; {I: 1, N: "int2string"}
0 from 3: ast.Var{id: 1, location: span{from: 0, to: 10}, name: "int2string"}; {I: 1, S: span{from: 0, to: 10}}. Union
  ast.Var{id: 1, location: span{from: 0, to: 10}, name: "int2string"}; {I: 1, S: span{from: 0, to: 10}}
44 from 42: ast.Var{id: 1, location: span{from: 0, to: 10}, name: "int2string"}; {I: 1, N: "int2string"}. Join(tc.typeVar, I: 43.id = 42.id & N: 43.name = 42.name)
ast.Expr from 0: ast.Var{id: 1, location: span{from: 0, to: 10}, name: "int2string"}; {I: 1, S: span{from: 0, to: 10}}. Subst({id: I, location: S})
  ast.Expr{id: 1, location: span{from: 0, to: 10}}; {I: 1, S: span{from: 0, to: 10}}
9 from ast.Expr: ast.Expr{id: 1, location: span{from: 0, to: 10}}; {I: 1, S: span{from: 0, to: 10}}. Match(ast.Expr{id: I, location: S}; {I: I, S: S})
  ast.Expr{id: 1, location: span{from: 0, to: 10}}; {I: 1, S: span{from: 0, to: 10}}
12 from ast.Expr: ast.Expr{id: 1, location: span{from: 0, to: 10}}; {I: 1, S: span{from: 0, to: 10}}. Match(ast.Expr{id: I, location: S}; {I: I, S: S})
  ast.Expr{id: 1, location: span{from: 0, to: 10}}; {I: 1, S: span{from: 0, to: 10}}
15 from ast.Expr: ast.Expr{id: 1, location: span{from: 0, to: 10}}; {I: 1, S: span{from: 0, to: 10}}. Match(ast.Expr{id: I, location: S}; {I: I, S: S})
  ast.Expr{id: 1, location: span{from: 0, to: 10}}; {I: 1, S: span{from: 0, to: 10}}
18 from ast.Expr: ast.Expr{id: 1, location: span{from: 0, to: 10}}; {I: 1, S: span{from: 0, to: 10}}. Match(ast.Expr{id: I, location: S}; {I: I, S: S})
  ast.Expr{id: 1, location: span{from: 0, to: 10}}; {I: 1, S: span{from: 0, to: 10}}
21 from ast.Expr: ast.Expr{id: 1, location: span{from: 0, to: 10}}; {I: 1, S: span{from: 0, to: 10}}. Match(ast.Expr{id: I, location: S}; {I: I, S: S})
  ast.Expr{id: 1, location: span{from: 0, to: 10}}; {I: 1, S: span{from: 0, to: 10}}
11 from 9: ast.Expr{id: 1, location: span{from: 0, to: 10}}; {I: 1, S: span{from: 0, to: 10}}. Join(ast.ParentExpr, I: 10.bodyID = 9.id)
14 from 12: ast.Expr{id: 1, location: span{from: 0, to: 10}}; {I: 1, S: span{from: 0, to: 10}}. Join(ast.ParentExpr, I: 13.bindingID = 12.id)
17 from 15: ast.Expr{id: 1, location: span{from: 0, to: 10}}; {I: 1, S: span{from: 0, to: 10}}. Join(ast.ParentExpr, I: 16.funcID = 15.id)
  ast.ParentExpr{id: 1, location: span{from: 0, to: 10}}; {I: 1, P: 0, S: span{from: 0, to: 10}}
20 from 18: ast.Expr{id: 1, location: span{from: 0, to: 10}}; {I: 1, S: span{from: 0, to: 10}}. Join(ast.ParentExpr, I: 19.argID = 18.id)
23 from 21: ast.Expr{id: 1, location: span{from: 0, to: 10}}; {I: 1, S: span{from: 0, to: 10}}. Join(ast.ParentExpr, I: 22.body = 21.id)
8 from 17: ast.ParentExpr{id: 1, location: span{from: 0, to: 10}}; {I: 1, P: 0, S: span{from: 0, to: 10}}. Union
  ast.ParentExpr{id: 1, location: span{from: 0, to: 10}}; {I: 1, P: 0, S: span{from: 0, to: 10}}
ast.ParentExpr from 8: ast.ParentExpr{id: 1, location: span{from: 0, to: 10}}; {I: 1, P: 0, S: span{from: 0, to: 10}}. Subst({id: I, parent: P, span: S})
  ast.ParentExpr{id: 1, parent: 0, span: span{from: 0, to: 10}}; {I: 1, P: 0, S: span{from: 0, to: 10}}

ast.IntLit{id: 2, location: span{from: 11, to: 12}, val: 2}.
----
text/propagation-log
ast.IntLit from null: ast.IntLit{id: 2, location: span{from: 11, to: 12}, val: 2}; {}. 
  ast.IntLit{id: 2, location: span{from: 11, to: 12}, val: 2}; {}
2 from ast.IntLit: ast.IntLit{id: 2, location: span{from: 11, to: 12}, val: 2}; {}. Match(ast.IntLit{id: I, location: S}; {})
  ast.IntLit{id: 2, location: span{from: 11, to: 12}, val: 2}; {I: 2, S: span{from: 11, to: 12}}
33 from ast.IntLit: ast.IntLit{id: 2, location: span{from: 11, to: 12}, val: 2}; {}. Match(ast.IntLit{id: I}; {})
  ast.IntLit{id: 2, location: span{from: 11, to: 12}, val: 2}; {I: 2}
0 from 2: ast.IntLit{id: 2, location: span{from: 11, to: 12}, val: 2}; {I: 2, S: span{from: 11, to: 12}}. Union
  ast.IntLit{id: 2, location: span{from: 11, to: 12}, val: 2}; {I: 2, S: span{from: 11, to: 12}}
tc.typeI from 33: ast.IntLit{id: 2, location: span{from: 11, to: 12}, val: 2}; {I: 2}. Subst({id: I, type: "int"})
  tc.typeI{id: 2, type: "int"}; {I: 2}
ast.Expr from 0: ast.IntLit{id: 2, location: span{from: 11, to: 12}, val: 2}; {I: 2, S: span{from: 11, to: 12}}. Subst({id: I, location: S})
  ast.Expr{id: 2, location: span{from: 11, to: 12}}; {I: 2, S: span{from: 11, to: 12}}
26 from tc.typeI: tc.typeI{id: 2, type: "int"}; {I: 2}. Match(tc.typeI{id: I, type: T}; {I: I})
  tc.typeI{id: 2, type: "int"}; {I: 2, T: "int"}
9 from ast.Expr: ast.Expr{id: 2, location: span{from: 11, to: 12}}; {I: 2, S: span{from: 11, to: 12}}. Match(ast.Expr{id: I, location: S}; {I: I, S: S})
  ast.Expr{id: 2, location: span{from: 11, to: 12}}; {I: 2, S: span{from: 11, to: 12}}
12 from ast.Expr: ast.Expr{id: 2, location: span{from: 11, to: 12}}; {I: 2, S: span{from: 11, to: 12}}. Match(ast.Expr{id: I, location: S}; {I: I, S: S})
  ast.Expr{id: 2, location: span{from: 11, to: 12}}; {I: 2, S: span{from: 11, to: 12}}
15 from ast.Expr: ast.Expr{id: 2, location: span{from: 11, to: 12}}; {I: 2, S: span{from: 11, to: 12}}. Match(ast.Expr{id: I, location: S}; {I: I, S: S})
  ast.Expr{id: 2, location: span{from: 11, to: 12}}; {I: 2, S: span{from: 11, to: 12}}
18 from ast.Expr: ast.Expr{id: 2, location: span{from: 11, to: 12}}; {I: 2, S: span{from: 11, to: 12}}. Match(ast.Expr{id: I, location: S}; {I: I, S: S})
  ast.Expr{id: 2, location: span{from: 11, to: 12}}; {I: 2, S: span{from: 11, to: 12}}
21 from ast.Expr: ast.Expr{id: 2, location: span{from: 11, to: 12}}; {I: 2, S: span{from: 11, to: 12}}. Match(ast.Expr{id: I, location: S}; {I: I, S: S})
  ast.Expr{id: 2, location: span{from: 11, to: 12}}; {I: 2, S: span{from: 11, to: 12}}
24 from 26: tc.typeI{id: 2, type: "int"}; {I: 2, T: "int"}. Union
  tc.typeI{id: 2, type: "int"}; {I: 2, T: "int"}
11 from 9: ast.Expr{id: 2, location: span{from: 11, to: 12}}; {I: 2, S: span{from: 11, to: 12}}. Join(ast.ParentExpr, I: 10.bodyID = 9.id)
14 from 12: ast.Expr{id: 2, location: span{from: 11, to: 12}}; {I: 2, S: span{from: 11, to: 12}}. Join(ast.ParentExpr, I: 13.bindingID = 12.id)
17 from 15: ast.Expr{id: 2, location: span{from: 11, to: 12}}; {I: 2, S: span{from: 11, to: 12}}. Join(ast.ParentExpr, I: 16.funcID = 15.id)
20 from 18: ast.Expr{id: 2, location: span{from: 11, to: 12}}; {I: 2, S: span{from: 11, to: 12}}. Join(ast.ParentExpr, I: 19.argID = 18.id)
  ast.ParentExpr{id: 2, location: span{from: 11, to: 12}}; {I: 2, P: 0, S: span{from: 11, to: 12}}
23 from 21: ast.Expr{id: 2, location: span{from: 11, to: 12}}; {I: 2, S: span{from: 11, to: 12}}. Join(ast.ParentExpr, I: 22.body = 21.id)
tc.Type from 24: tc.typeI{id: 2, type: "int"}; {I: 2, T: "int"}. Subst({id: I, type: T})
  tc.Type{id: 2, type: "int"}; {I: 2, T: "int"}
8 from 20: ast.ParentExpr{id: 2, location: span{from: 11, to: 12}}; {I: 2, P: 0, S: span{from: 11, to: 12}}. Union
  ast.ParentExpr{id: 2, location: span{from: 11, to: 12}}; {I: 2, P: 0, S: span{from: 11, to: 12}}
35 from tc.Type: tc.Type{id: 2, type: "int"}; {I: 2, T: "int"}. Match(tc.Type{id: FID, type: tapp{from: F, to: T}}; {I: FID})
37 from tc.Type: tc.Type{id: 2, type: "int"}; {I: 2, T: "int"}. Match(tc.Type{id: AID, type: F}; {I: AID, T: F})
  tc.Type{id: 2, type: "int"}; {AID: 2, F: "int"}
40 from tc.Type: tc.Type{id: 2, type: "int"}; {I: 2, T: "int"}. Match(tc.Type{id: BID, type: T}; {I: BID, T: T})
  tc.Type{id: 2, type: "int"}; {BID: 2, T: "int"}
48 from tc.Type: tc.Type{id: 2, type: "int"}; {I: 2, T: "int"}. Match(tc.Type{id: B, type: R}; {I: B, T: R})
  tc.Type{id: 2, type: "int"}; {B: 2, R: "int"}
62 from tc.Type: tc.Type{id: 2, type: "int"}; {I: 2, T: "int"}. Match(tc.Type{id: B, type: T}; {I: B, T: T})
  tc.Type{id: 2, type: "int"}; {B: 2, T: "int"}
ast.ParentExpr from 8: ast.ParentExpr{id: 2, location: span{from: 11, to: 12}}; {I: 2, P: 0, S: span{from: 11, to: 12}}. Subst({id: I, parent: P, span: S})
  ast.ParentExpr{id: 2, parent: 0, span: span{from: 11, to: 12}}; {I: 2, P: 0, S: span{from: 11, to: 12}}
38 from 37: tc.Type{id: 2, type: "int"}; {AID: 2, F: "int"}. Join(tc.typeFC, F: 37.type = 36.type.from)
41 from 40: tc.Type{id: 2, type: "int"}; {BID: 2, T: "int"}. Join(tc.typeLet, BID: 40.id = 39.bodyID)
49 from 48: tc.Type{id: 2, type: "int"}; {B: 2, R: "int"}. Join(tc.typeLambda, )
63 from 62: tc.Type{id: 2, type: "int"}; {B: 2, T: "int"}. Join(tc.scopeLet, B: 62.id = 61.bindingID)

.dumpcaches
----
application/json
{
  "0": {
    "nodeID": "0",
    "cache": {}
  },
  "1": {
    "nodeID": "1",
    "cache": {}
  },
  "2": {
    "nodeID": "2",
    "cache": {}
  },
  "3": {
    "nodeID": "3",
    "cache": {}
  },
  "4": {
    "nodeID": "4",
    "cache": {}
  },
  "5": {
    "nodeID": "5",
    "cache": {}
  },
  "6": {
    "nodeID": "6",
    "cache": {}
  },
  "7": {
    "nodeID": "7",
    "cache": {}
  },
  "8": {
    "nodeID": "8",
    "cache": {}
  },
  "9": {
    "nodeID": "9",
    "cache": {
      "I": {
        "items": {
          "0": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.Expr",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 0
                  },
                  "location": {
                    "type": "Record",
                    "relation": "span",
                    "attrs": {
                      "from": {
                        "type": "IntLit",
                        "val": 0
                      },
                      "to": {
                        "type": "IntLit",
                        "val": 13
                      }
                    }
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 0
                },
                "S": {
                  "type": "Record",
                  "relation": "span",
                  "attrs": {
                    "from": {
                      "type": "IntLit",
                      "val": 0
                    },
                    "to": {
                      "type": "IntLit",
                      "val": 13
                    }
                  }
                }
              }
            }
          ],
          "1": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.Expr",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 1
                  },
                  "location": {
                    "type": "Record",
                    "relation": "span",
                    "attrs": {
                      "from": {
                        "type": "IntLit",
                        "val": 0
                      },
                      "to": {
                        "type": "IntLit",
                        "val": 10
                      }
                    }
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 1
                },
                "S": {
                  "type": "Record",
                  "relation": "span",
                  "attrs": {
                    "from": {
                      "type": "IntLit",
                      "val": 0
                    },
                    "to": {
                      "type": "IntLit",
                      "val": 10
                    }
                  }
                }
              }
            }
          ],
          "2": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.Expr",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 2
                  },
                  "location": {
                    "type": "Record",
                    "relation": "span",
                    "attrs": {
                      "from": {
                        "type": "IntLit",
                        "val": 11
                      },
                      "to": {
                        "type": "IntLit",
                        "val": 12
                      }
                    }
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 2
                },
                "S": {
                  "type": "Record",
                  "relation": "span",
                  "attrs": {
                    "from": {
                      "type": "IntLit",
                      "val": 11
                    },
                    "to": {
                      "type": "IntLit",
                      "val": 12
                    }
                  }
                }
              }
            }
          ]
        }
      }
    }
  },
  "10": {
    "nodeID": "10",
    "cache": {
      "I": {
        "items": {}
      }
    }
  },
  "11": {
    "nodeID": "11",
    "cache": {}
  },
  "12": {
    "nodeID": "12",
    "cache": {
      "I": {
        "items": {
          "0": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.Expr",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 0
                  },
                  "location": {
                    "type": "Record",
                    "relation": "span",
                    "attrs": {
                      "from": {
                        "type": "IntLit",
                        "val": 0
                      },
                      "to": {
                        "type": "IntLit",
                        "val": 13
                      }
                    }
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 0
                },
                "S": {
                  "type": "Record",
                  "relation": "span",
                  "attrs": {
                    "from": {
                      "type": "IntLit",
                      "val": 0
                    },
                    "to": {
                      "type": "IntLit",
                      "val": 13
                    }
                  }
                }
              }
            }
          ],
          "1": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.Expr",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 1
                  },
                  "location": {
                    "type": "Record",
                    "relation": "span",
                    "attrs": {
                      "from": {
                        "type": "IntLit",
                        "val": 0
                      },
                      "to": {
                        "type": "IntLit",
                        "val": 10
                      }
                    }
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 1
                },
                "S": {
                  "type": "Record",
                  "relation": "span",
                  "attrs": {
                    "from": {
                      "type": "IntLit",
                      "val": 0
                    },
                    "to": {
                      "type": "IntLit",
                      "val": 10
                    }
                  }
                }
              }
            }
          ],
          "2": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.Expr",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 2
                  },
                  "location": {
                    "type": "Record",
                    "relation": "span",
                    "attrs": {
                      "from": {
                        "type": "IntLit",
                        "val": 11
                      },
                      "to": {
                        "type": "IntLit",
                        "val": 12
                      }
                    }
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 2
                },
                "S": {
                  "type": "Record",
                  "relation": "span",
                  "attrs": {
                    "from": {
                      "type": "IntLit",
                      "val": 11
                    },
                    "to": {
                      "type": "IntLit",
                      "val": 12
                    }
                  }
                }
              }
            }
          ]
        }
      }
    }
  },
  "13": {
    "nodeID": "13",
    "cache": {
      "I": {
        "items": {}
      }
    }
  },
  "14": {
    "nodeID": "14",
    "cache": {}
  },
  "15": {
    "nodeID": "15",
    "cache": {
      "I": {
        "items": {
          "0": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.Expr",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 0
                  },
                  "location": {
                    "type": "Record",
                    "relation": "span",
                    "attrs": {
                      "from": {
                        "type": "IntLit",
                        "val": 0
                      },
                      "to": {
                        "type": "IntLit",
                        "val": 13
                      }
                    }
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 0
                },
                "S": {
                  "type": "Record",
                  "relation": "span",
                  "attrs": {
                    "from": {
                      "type": "IntLit",
                      "val": 0
                    },
                    "to": {
                      "type": "IntLit",
                      "val": 13
                    }
                  }
                }
              }
            }
          ],
          "1": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.Expr",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 1
                  },
                  "location": {
                    "type": "Record",
                    "relation": "span",
                    "attrs": {
                      "from": {
                        "type": "IntLit",
                        "val": 0
                      },
                      "to": {
                        "type": "IntLit",
                        "val": 10
                      }
                    }
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 1
                },
                "S": {
                  "type": "Record",
                  "relation": "span",
                  "attrs": {
                    "from": {
                      "type": "IntLit",
                      "val": 0
                    },
                    "to": {
                      "type": "IntLit",
                      "val": 10
                    }
                  }
                }
              }
            }
          ],
          "2": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.Expr",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 2
                  },
                  "location": {
                    "type": "Record",
                    "relation": "span",
                    "attrs": {
                      "from": {
                        "type": "IntLit",
                        "val": 11
                      },
                      "to": {
                        "type": "IntLit",
                        "val": 12
                      }
                    }
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 2
                },
                "S": {
                  "type": "Record",
                  "relation": "span",
                  "attrs": {
                    "from": {
                      "type": "IntLit",
                      "val": 11
                    },
                    "to": {
                      "type": "IntLit",
                      "val": 12
                    }
                  }
                }
              }
            }
          ]
        }
      }
    }
  },
  "16": {
    "nodeID": "16",
    "cache": {
      "I": {
        "items": {
          "1": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.FuncCall",
                "attrs": {
                  "argID": {
                    "type": "IntLit",
                    "val": 2
                  },
                  "funcID": {
                    "type": "IntLit",
                    "val": 1
                  },
                  "id": {
                    "type": "IntLit",
                    "val": 0
                  },
                  "location": {
                    "type": "Record",
                    "relation": "span",
                    "attrs": {
                      "from": {
                        "type": "IntLit",
                        "val": 0
                      },
                      "to": {
                        "type": "IntLit",
                        "val": 13
                      }
                    }
                  }
                }
              },
              "bindings": {
                "P": {
                  "type": "IntLit",
                  "val": 0
                },
                "I": {
                  "type": "IntLit",
                  "val": 1
                }
              }
            }
          ]
        }
      }
    }
  },
  "17": {
    "nodeID": "17",
    "cache": {}
  },
  "18": {
    "nodeID": "18",
    "cache": {
      "I": {
        "items": {
          "0": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.Expr",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 0
                  },
                  "location": {
                    "type": "Record",
                    "relation": "span",
                    "attrs": {
                      "from": {
                        "type": "IntLit",
                        "val": 0
                      },
                      "to": {
                        "type": "IntLit",
                        "val": 13
                      }
                    }
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 0
                },
                "S": {
                  "type": "Record",
                  "relation": "span",
                  "attrs": {
                    "from": {
                      "type": "IntLit",
                      "val": 0
                    },
                    "to": {
                      "type": "IntLit",
                      "val": 13
                    }
                  }
                }
              }
            }
          ],
          "1": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.Expr",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 1
                  },
                  "location": {
                    "type": "Record",
                    "relation": "span",
                    "attrs": {
                      "from": {
                        "type": "IntLit",
                        "val": 0
                      },
                      "to": {
                        "type": "IntLit",
                        "val": 10
                      }
                    }
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 1
                },
                "S": {
                  "type": "Record",
                  "relation": "span",
                  "attrs": {
                    "from": {
                      "type": "IntLit",
                      "val": 0
                    },
                    "to": {
                      "type": "IntLit",
                      "val": 10
                    }
                  }
                }
              }
            }
          ],
          "2": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.Expr",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 2
                  },
                  "location": {
                    "type": "Record",
                    "relation": "span",
                    "attrs": {
                      "from": {
                        "type": "IntLit",
                        "val": 11
                      },
                      "to": {
                        "type": "IntLit",
                        "val": 12
                      }
                    }
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 2
                },
                "S": {
                  "type": "Record",
                  "relation": "span",
                  "attrs": {
                    "from": {
                      "type": "IntLit",
                      "val": 11
                    },
                    "to": {
                      "type": "IntLit",
                      "val": 12
                    }
                  }
                }
              }
            }
          ]
        }
      }
    }
  },
  "19": {
    "nodeID": "19",
    "cache": {
      "I": {
        "items": {
          "2": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.FuncCall",
                "attrs": {
                  "argID": {
                    "type": "IntLit",
                    "val": 2
                  },
                  "funcID": {
                    "type": "IntLit",
                    "val": 1
                  },
                  "id": {
                    "type": "IntLit",
                    "val": 0
                  },
                  "location": {
                    "type": "Record",
                    "relation": "span",
                    "attrs": {
                      "from": {
                        "type": "IntLit",
                        "val": 0
                      },
                      "to": {
                        "type": "IntLit",
                        "val": 13
                      }
                    }
                  }
                }
              },
              "bindings": {
                "P": {
                  "type": "IntLit",
                  "val": 0
                },
                "I": {
                  "type": "IntLit",
                  "val": 2
                }
              }
            }
          ]
        }
      }
    }
  },
  "20": {
    "nodeID": "20",
    "cache": {}
  },
  "21": {
    "nodeID": "21",
    "cache": {
      "I": {
        "items": {
          "0": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.Expr",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 0
                  },
                  "location": {
                    "type": "Record",
                    "relation": "span",
                    "attrs": {
                      "from": {
                        "type": "IntLit",
                        "val": 0
                      },
                      "to": {
                        "type": "IntLit",
                        "val": 13
                      }
                    }
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 0
                },
                "S": {
                  "type": "Record",
                  "relation": "span",
                  "attrs": {
                    "from": {
                      "type": "IntLit",
                      "val": 0
                    },
                    "to": {
                      "type": "IntLit",
                      "val": 13
                    }
                  }
                }
              }
            }
          ],
          "1": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.Expr",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 1
                  },
                  "location": {
                    "type": "Record",
                    "relation": "span",
                    "attrs": {
                      "from": {
                        "type": "IntLit",
                        "val": 0
                      },
                      "to": {
                        "type": "IntLit",
                        "val": 10
                      }
                    }
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 1
                },
                "S": {
                  "type": "Record",
                  "relation": "span",
                  "attrs": {
                    "from": {
                      "type": "IntLit",
                      "val": 0
                    },
                    "to": {
                      "type": "IntLit",
                      "val": 10
                    }
                  }
                }
              }
            }
          ],
          "2": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.Expr",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 2
                  },
                  "location": {
                    "type": "Record",
                    "relation": "span",
                    "attrs": {
                      "from": {
                        "type": "IntLit",
                        "val": 11
                      },
                      "to": {
                        "type": "IntLit",
                        "val": 12
                      }
                    }
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 2
                },
                "S": {
                  "type": "Record",
                  "relation": "span",
                  "attrs": {
                    "from": {
                      "type": "IntLit",
                      "val": 11
                    },
                    "to": {
                      "type": "IntLit",
                      "val": 12
                    }
                  }
                }
              }
            }
          ]
        }
      }
    }
  },
  "22": {
    "nodeID": "22",
    "cache": {
      "I": {
        "items": {}
      }
    }
  },
  "23": {
    "nodeID": "23",
    "cache": {}
  },
  "24": {
    "nodeID": "24",
    "cache": {}
  },
  "25": {
    "nodeID": "25",
    "cache": {}
  },
  "26": {
    "nodeID": "26",
    "cache": {}
  },
  "27": {
    "nodeID": "27",
    "cache": {}
  },
  "28": {
    "nodeID": "28",
    "cache": {}
  },
  "29": {
    "nodeID": "29",
    "cache": {}
  },
  "30": {
    "nodeID": "30",
    "cache": {}
  },
  "31": {
    "nodeID": "31",
    "cache": {}
  },
  "32": {
    "nodeID": "32",
    "cache": {}
  },
  "33": {
    "nodeID": "33",
    "cache": {}
  },
  "34": {
    "nodeID": "34",
    "cache": {
      "FID": {
        "items": {
          "1": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.FuncCall",
                "attrs": {
                  "argID": {
                    "type": "IntLit",
                    "val": 2
                  },
                  "funcID": {
                    "type": "IntLit",
                    "val": 1
                  },
                  "id": {
                    "type": "IntLit",
                    "val": 0
                  },
                  "location": {
                    "type": "Record",
                    "relation": "span",
                    "attrs": {
                      "from": {
                        "type": "IntLit",
                        "val": 0
                      },
                      "to": {
                        "type": "IntLit",
                        "val": 13
                      }
                    }
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 0
                },
                "FID": {
                  "type": "IntLit",
                  "val": 1
                },
                "AID": {
                  "type": "IntLit",
                  "val": 2
                }
              }
            }
          ]
        }
      }
    }
  },
  "35": {
    "nodeID": "35",
    "cache": {
      "FID": {
        "items": {}
      }
    }
  },
  "36": {
    "nodeID": "36",
    "cache": {
      "F": {
        "items": {}
      }
    }
  },
  "37": {
    "nodeID": "37",
    "cache": {
      "F": {
        "items": {
          "\"int\"": [
            {
              "term": {
                "type": "Record",
                "relation": "tc.Type",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 2
                  },
                  "type": {
                    "type": "StringLit",
                    "val": "int"
                  }
                }
              },
              "bindings": {
                "AID": {
                  "type": "IntLit",
                  "val": 2
                },
                "F": {
                  "type": "StringLit",
                  "val": "int"
                }
              }
            }
          ]
        }
      }
    }
  },
  "38": {
    "nodeID": "38",
    "cache": {}
  },
  "39": {
    "nodeID": "39",
    "cache": {
      "BID": {
        "items": {}
      }
    }
  },
  "40": {
    "nodeID": "40",
    "cache": {
      "BID": {
        "items": {
          "2": [
            {
              "term": {
                "type": "Record",
                "relation": "tc.Type",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 2
                  },
                  "type": {
                    "type": "StringLit",
                    "val": "int"
                  }
                }
              },
              "bindings": {
                "BID": {
                  "type": "IntLit",
                  "val": 2
                },
                "T": {
                  "type": "StringLit",
                  "val": "int"
                }
              }
            }
          ]
        }
      }
    }
  },
  "41": {
    "nodeID": "41",
    "cache": {}
  },
  "42": {
    "nodeID": "42",
    "cache": {
      "I-N": {
        "items": {
          "1-\"int2string\"": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.Var",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 1
                  },
                  "location": {
                    "type": "Record",
                    "relation": "span",
                    "attrs": {
                      "from": {
                        "type": "IntLit",
                        "val": 0
                      },
                      "to": {
                        "type": "IntLit",
                        "val": 10
                      }
                    }
                  },
                  "name": {
                    "type": "StringLit",
                    "val": "int2string"
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 1
                },
                "N": {
                  "type": "StringLit",
                  "val": "int2string"
                }
              }
            }
          ]
        }
      }
    }
  },
  "43": {
    "nodeID": "43",
    "cache": {
      "I-N": {
        "items": {
          "0-\"intToString\"": [
            {
              "term": {
                "type": "Record",
                "relation": "tc.ScopeItem",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 0
                  },
                  "name": {
                    "type": "StringLit",
                    "val": "intToString"
                  },
                  "type": {
                    "type": "Record",
                    "relation": "tapp",
                    "attrs": {
                      "from": {
                        "type": "StringLit",
                        "val": "int"
                      },
                      "to": {
                        "type": "StringLit",
                        "val": "string"
                      }
                    }
                  },
                  "location": {
                    "type": "StringLit",
                    "val": "builtin"
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 0
                },
                "N": {
                  "type": "StringLit",
                  "val": "intToString"
                },
                "T": {
                  "type": "Record",
                  "relation": "tapp",
                  "attrs": {
                    "from": {
                      "type": "StringLit",
                      "val": "int"
                    },
                    "to": {
                      "type": "StringLit",
                      "val": "string"
                    }
                  }
                }
              }
            }
          ],
          "2-\"intToString\"": [
            {
              "term": {
                "type": "Record",
                "relation": "tc.ScopeItem",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 2
                  },
                  "name": {
                    "type": "StringLit",
                    "val": "intToString"
                  },
                  "type": {
                    "type": "Record",
                    "relation": "tapp",
                    "attrs": {
                      "from": {
                        "type": "StringLit",
                        "val": "int"
                      },
                      "to": {
                        "type": "StringLit",
                        "val": "string"
                      }
                    }
                  },
                  "location": {
                    "type": "StringLit",
                    "val": "builtin"
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 2
                },
                "N": {
                  "type": "StringLit",
                  "val": "intToString"
                },
                "T": {
                  "type": "Record",
                  "relation": "tapp",
                  "attrs": {
                    "from": {
                      "type": "StringLit",
                      "val": "int"
                    },
                    "to": {
                      "type": "StringLit",
                      "val": "string"
                    }
                  }
                }
              }
            }
          ],
          "1-\"intToString\"": [
            {
              "term": {
                "type": "Record",
                "relation": "tc.ScopeItem",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 1
                  },
                  "name": {
                    "type": "StringLit",
                    "val": "intToString"
                  },
                  "type": {
                    "type": "Record",
                    "relation": "tapp",
                    "attrs": {
                      "from": {
                        "type": "StringLit",
                        "val": "int"
                      },
                      "to": {
                        "type": "StringLit",
                        "val": "string"
                      }
                    }
                  },
                  "location": {
                    "type": "StringLit",
                    "val": "builtin"
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 1
                },
                "N": {
                  "type": "StringLit",
                  "val": "intToString"
                },
                "T": {
                  "type": "Record",
                  "relation": "tapp",
                  "attrs": {
                    "from": {
                      "type": "StringLit",
                      "val": "int"
                    },
                    "to": {
                      "type": "StringLit",
                      "val": "string"
                    }
                  }
                }
              }
            }
          ]
        }
      }
    }
  },
  "44": {
    "nodeID": "44",
    "cache": {}
  },
  "45": {
    "nodeID": "45",
    "cache": {
      "I": {
        "items": {}
      }
    }
  },
  "46": {
    "nodeID": "46",
    "cache": {
      "I": {
        "items": {}
      }
    }
  },
  "47": {
    "nodeID": "47",
    "cache": {
      "": {
        "items": {}
      }
    }
  },
  "48": {
    "nodeID": "48",
    "cache": {
      "": {
        "items": {
          "": [
            {
              "term": {
                "type": "Record",
                "relation": "tc.Type",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 2
                  },
                  "type": {
                    "type": "StringLit",
                    "val": "int"
                  }
                }
              },
              "bindings": {
                "B": {
                  "type": "IntLit",
                  "val": 2
                },
                "R": {
                  "type": "StringLit",
                  "val": "int"
                }
              }
            }
          ]
        }
      }
    }
  },
  "49": {
    "nodeID": "49",
    "cache": {}
  },
  "50": {
    "nodeID": "50",
    "cache": {}
  },
  "51": {
    "nodeID": "51",
    "cache": {}
  },
  "52": {
    "nodeID": "52",
    "cache": {}
  },
  "53": {
    "nodeID": "53",
    "cache": {}
  },
  "54": {
    "nodeID": "54",
    "cache": {}
  },
  "55": {
    "nodeID": "55",
    "cache": {
      "P": {
        "items": {
          "0": [
            {
              "term": {
                "type": "Record",
                "relation": "tc.parentScope",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 2
                  },
                  "parentID": {
                    "type": "IntLit",
                    "val": 0
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 2
                },
                "P": {
                  "type": "IntLit",
                  "val": 0
                }
              }
            },
            {
              "term": {
                "type": "Record",
                "relation": "tc.parentScope",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 1
                  },
                  "parentID": {
                    "type": "IntLit",
                    "val": 0
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 1
                },
                "P": {
                  "type": "IntLit",
                  "val": 0
                }
              }
            }
          ]
        }
      }
    }
  },
  "56": {
    "nodeID": "56",
    "cache": {
      "P": {
        "items": {
          "0": [
            {
              "term": {
                "type": "Record",
                "relation": "tc.ScopeItem",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 0
                  },
                  "name": {
                    "type": "StringLit",
                    "val": "intToString"
                  },
                  "type": {
                    "type": "Record",
                    "relation": "tapp",
                    "attrs": {
                      "from": {
                        "type": "StringLit",
                        "val": "int"
                      },
                      "to": {
                        "type": "StringLit",
                        "val": "string"
                      }
                    }
                  },
                  "location": {
                    "type": "StringLit",
                    "val": "builtin"
                  }
                }
              },
              "bindings": {
                "P": {
                  "type": "IntLit",
                  "val": 0
                },
                "N": {
                  "type": "StringLit",
                  "val": "intToString"
                },
                "T": {
                  "type": "Record",
                  "relation": "tapp",
                  "attrs": {
                    "from": {
                      "type": "StringLit",
                      "val": "int"
                    },
                    "to": {
                      "type": "StringLit",
                      "val": "string"
                    }
                  }
                },
                "L": {
                  "type": "StringLit",
                  "val": "builtin"
                }
              }
            }
          ],
          "1": [
            {
              "term": {
                "type": "Record",
                "relation": "tc.ScopeItem",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 1
                  },
                  "name": {
                    "type": "StringLit",
                    "val": "intToString"
                  },
                  "type": {
                    "type": "Record",
                    "relation": "tapp",
                    "attrs": {
                      "from": {
                        "type": "StringLit",
                        "val": "int"
                      },
                      "to": {
                        "type": "StringLit",
                        "val": "string"
                      }
                    }
                  },
                  "location": {
                    "type": "StringLit",
                    "val": "builtin"
                  }
                }
              },
              "bindings": {
                "P": {
                  "type": "IntLit",
                  "val": 1
                },
                "N": {
                  "type": "StringLit",
                  "val": "intToString"
                },
                "T": {
                  "type": "Record",
                  "relation": "tapp",
                  "attrs": {
                    "from": {
                      "type": "StringLit",
                      "val": "int"
                    },
                    "to": {
                      "type": "StringLit",
                      "val": "string"
                    }
                  }
                },
                "L": {
                  "type": "StringLit",
                  "val": "builtin"
                }
              }
            }
          ],
          "2": [
            {
              "term": {
                "type": "Record",
                "relation": "tc.ScopeItem",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 2
                  },
                  "name": {
                    "type": "StringLit",
                    "val": "intToString"
                  },
                  "type": {
                    "type": "Record",
                    "relation": "tapp",
                    "attrs": {
                      "from": {
                        "type": "StringLit",
                        "val": "int"
                      },
                      "to": {
                        "type": "StringLit",
                        "val": "string"
                      }
                    }
                  },
                  "location": {
                    "type": "StringLit",
                    "val": "builtin"
                  }
                }
              },
              "bindings": {
                "P": {
                  "type": "IntLit",
                  "val": 2
                },
                "N": {
                  "type": "StringLit",
                  "val": "intToString"
                },
                "T": {
                  "type": "Record",
                  "relation": "tapp",
                  "attrs": {
                    "from": {
                      "type": "StringLit",
                      "val": "int"
                    },
                    "to": {
                      "type": "StringLit",
                      "val": "string"
                    }
                  }
                },
                "L": {
                  "type": "StringLit",
                  "val": "builtin"
                }
              }
            }
          ]
        }
      }
    }
  },
  "57": {
    "nodeID": "57",
    "cache": {}
  },
  "58": {
    "nodeID": "58",
    "cache": {
      "": {
        "items": {
          "": [
            {
              "term": {
                "type": "Record",
                "relation": "ast.RootExpr",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 0
                  }
                }
              },
              "bindings": {
                "I": {
                  "type": "IntLit",
                  "val": 0
                }
              }
            }
          ]
        }
      }
    }
  },
  "59": {
    "nodeID": "59",
    "cache": {
      "": {
        "items": {
          "": [
            {
              "term": {
                "type": "Record",
                "relation": "lang.Builtin",
                "attrs": {
                  "name": {
                    "type": "StringLit",
                    "val": "intToString"
                  },
                  "type": {
                    "type": "Record",
                    "relation": "tapp",
                    "attrs": {
                      "from": {
                        "type": "StringLit",
                        "val": "int"
                      },
                      "to": {
                        "type": "StringLit",
                        "val": "string"
                      }
                    }
                  }
                }
              },
              "bindings": {
                "N": {
                  "type": "StringLit",
                  "val": "intToString"
                },
                "T": {
                  "type": "Record",
                  "relation": "tapp",
                  "attrs": {
                    "from": {
                      "type": "StringLit",
                      "val": "int"
                    },
                    "to": {
                      "type": "StringLit",
                      "val": "string"
                    }
                  }
                }
              }
            }
          ]
        }
      }
    }
  },
  "60": {
    "nodeID": "60",
    "cache": {}
  },
  "61": {
    "nodeID": "61",
    "cache": {
      "B": {
        "items": {}
      }
    }
  },
  "62": {
    "nodeID": "62",
    "cache": {
      "B": {
        "items": {
          "2": [
            {
              "term": {
                "type": "Record",
                "relation": "tc.Type",
                "attrs": {
                  "id": {
                    "type": "IntLit",
                    "val": 2
                  },
                  "type": {
                    "type": "StringLit",
                    "val": "int"
                  }
                }
              },
              "bindings": {
                "B": {
                  "type": "IntLit",
                  "val": 2
                },
                "T": {
                  "type": "StringLit",
                  "val": "int"
                }
              }
            }
          ]
        }
      }
    }
  },
  "63": {
    "nodeID": "63",
    "cache": {}
  },
  "64": {
    "nodeID": "64",
    "cache": {
      "LID": {
        "items": {}
      }
    }
  },
  "65": {
    "nodeID": "65",
    "cache": {
      "LID": {
        "items": {}
      }
    }
  },
  "66": {
    "nodeID": "66",
    "cache": {}
  },
  "67": {
    "nodeID": "67",
    "cache": {}
  },
  "68": {
    "nodeID": "68",
    "cache": {}
  },
  "69": {
    "nodeID": "69",
    "cache": {}
  },
  "70": {
    "nodeID": "70",
    "cache": {}
  },
  "71": {
    "nodeID": "71",
    "cache": {}
  },
  "72": {
    "nodeID": "72",
    "cache": {}
  },
  "ast.RootExpr": {
    "nodeID": "ast.RootExpr",
    "cache": {}
  },
  "ast.StringLit": {
    "nodeID": "ast.StringLit",
    "cache": {}
  },
  "ast.IntLit": {
    "nodeID": "ast.IntLit",
    "cache": {}
  },
  "ast.LetExpr": {
    "nodeID": "ast.LetExpr",
    "cache": {}
  },
  "ast.Lambda": {
    "nodeID": "ast.Lambda",
    "cache": {}
  },
  "ast.LambdaParam": {
    "nodeID": "ast.LambdaParam",
    "cache": {}
  },
  "ast.FuncCall": {
    "nodeID": "ast.FuncCall",
    "cache": {}
  },
  "ast.Var": {
    "nodeID": "ast.Var",
    "cache": {}
  },
  "ast.Placeholder": {
    "nodeID": "ast.Placeholder",
    "cache": {}
  },
  "ast.Expr": {
    "nodeID": "ast.Expr",
    "cache": {}
  },
  "ast.ParentExpr": {
    "nodeID": "ast.ParentExpr",
    "cache": {}
  },
  "lang.Builtin": {
    "nodeID": "lang.Builtin",
    "cache": {}
  },
  "tc.Type": {
    "nodeID": "tc.Type",
    "cache": {}
  },
  "tc.typeS": {
    "nodeID": "tc.typeS",
    "cache": {}
  },
  "tc.typeI": {
    "nodeID": "tc.typeI",
    "cache": {}
  },
  "tc.typeFC": {
    "nodeID": "tc.typeFC",
    "cache": {}
  },
  "tc.typeLet": {
    "nodeID": "tc.typeLet",
    "cache": {}
  },
  "tc.typeVar": {
    "nodeID": "tc.typeVar",
    "cache": {}
  },
  "tc.typeLambda": {
    "nodeID": "tc.typeLambda",
    "cache": {}
  },
  "tc.typePlaceholder": {
    "nodeID": "tc.typePlaceholder",
    "cache": {}
  },
  "tc.ScopeItem": {
    "nodeID": "tc.ScopeItem",
    "cache": {}
  },
  "tc.scopeBuiltin": {
    "nodeID": "tc.scopeBuiltin",
    "cache": {}
  },
  "tc.scopeLet": {
    "nodeID": "tc.scopeLet",
    "cache": {}
  },
  "tc.scopeLambda": {
    "nodeID": "tc.scopeLambda",
    "cache": {}
  },
  "tc.parentScope": {
    "nodeID": "tc.parentScope",
    "cache": {}
  }
}
