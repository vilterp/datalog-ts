.table mother
----
text/plain

.table father
----
text/plain

parent{child: C, parent: P} :-
  mother{child: C, mother: P} | father{child: C, father: P}.
----
text/propagation-log

father{child: "Pete", father: "Paul"}.
----
text/propagation-log
from null to father: father{child: "Pete", father: "Paul"}; {}.  []
  father{child: "Pete", father: "Paul"}; {}
from father to 2: father{child: "Pete", father: "Paul"}; {}. Match(father{child: C, father: P}; {}) []
  father{child: "Pete", father: "Paul"}; {C: "Pete", P: "Paul"}
from 2 to 0: father{child: "Pete", father: "Paul"}; {C: "Pete", P: "Paul"}. Union []
  father{child: "Pete", father: "Paul"}; {C: "Pete", P: "Paul"}
from 0 to parent: father{child: "Pete", father: "Paul"}; {C: "Pete", P: "Paul"}. Subst({child: C, parent: P}) []
  parent{child: "Pete", parent: "Paul"}; {C: "Pete", P: "Paul"}
