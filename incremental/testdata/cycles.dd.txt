.table baseEdge
----
text/plain

edge{from: F, to: T} :-
  baseEdge{from: F, to: T} |
  baseEdge{from: F, to: I} & edge{from: I, to: T}.
----
emission-log

.rulegraph
----
application/graphviz
digraph G {
  "0" [fillcolor="moccasin" label="0: Union []" shape="box" style="filled"];
  "1" [fillcolor="darkseagreen2" label="1: Match(baseEdge{from: F, to: T}; {}) []" shape="box" style="filled"];
  "2" [fillcolor="darkseagreen2" label="2: Match(baseEdge{from: F, to: I}; {}) [I]" shape="box" style="filled"];
  "3" [fillcolor="darkseagreen2" label="3: Match(edge{from: I, to: T}; {F: I, T: T}) [I]" shape="box" style="filled"];
  "4" [fillcolor="thistle" label="4: edge: Join(I: 3.from = 2.to) []" shape="box" style="filled"];
  "baseEdge" [fillcolor="darksalmon" label="baseEdge:  []" shape="box" style="filled"];
  "edge" [fillcolor="lightblue" label="edge: Subst({from: F, to: T}) []" shape="box" style="filled"];
  "0" -> "edge" [];
  "1" -> "0" [];
  "2" -> "4" [];
  "3" -> "4" [];
  "4" -> "0" [];
  "baseEdge" -> "1" [];
  "baseEdge" -> "2" [];
  "edge" -> "3" [];
}

baseEdge{from: "A", to: "B"}.
----
emission-log
null => baseEdge: baseEdge{from: "A", to: "B"}; {}
  baseEdge{from: "A", to: "B"}; {}
baseEdge => 1: baseEdge{from: "A", to: "B"}; {}
  baseEdge{from: "A", to: "B"}; {F: "A", T: "B"}
baseEdge => 2: baseEdge{from: "A", to: "B"}; {}
  baseEdge{from: "A", to: "B"}; {F: "A", I: "B"}
1 => 0: baseEdge{from: "A", to: "B"}; {F: "A", T: "B"}
  baseEdge{from: "A", to: "B"}; {F: "A", T: "B"}
2 => 4: baseEdge{from: "A", to: "B"}; {F: "A", I: "B"}
0 => edge: baseEdge{from: "A", to: "B"}; {F: "A", T: "B"}
  edge{from: "A", to: "B"}; {F: "A", T: "B"}
edge => 3: edge{from: "A", to: "B"}; {F: "A", T: "B"}
  edge{from: "A", to: "B"}; {I: "A", T: "B"}
3 => 4: edge{from: "A", to: "B"}; {I: "A", T: "B"}

baseEdge{from: "C", to: "D"}.
----
emission-log
null => baseEdge: baseEdge{from: "C", to: "D"}; {}
  baseEdge{from: "C", to: "D"}; {}
baseEdge => 1: baseEdge{from: "C", to: "D"}; {}
  baseEdge{from: "C", to: "D"}; {F: "C", T: "D"}
baseEdge => 2: baseEdge{from: "C", to: "D"}; {}
  baseEdge{from: "C", to: "D"}; {F: "C", I: "D"}
1 => 0: baseEdge{from: "C", to: "D"}; {F: "C", T: "D"}
  baseEdge{from: "C", to: "D"}; {F: "C", T: "D"}
2 => 4: baseEdge{from: "C", to: "D"}; {F: "C", I: "D"}
0 => edge: baseEdge{from: "C", to: "D"}; {F: "C", T: "D"}
  edge{from: "C", to: "D"}; {F: "C", T: "D"}
edge => 3: edge{from: "C", to: "D"}; {F: "C", T: "D"}
  edge{from: "C", to: "D"}; {I: "C", T: "D"}
3 => 4: edge{from: "C", to: "D"}; {I: "C", T: "D"}

baseEdge{from: "B", to: "C"}.
----
emission-log
null => baseEdge: baseEdge{from: "B", to: "C"}; {}
  baseEdge{from: "B", to: "C"}; {}
baseEdge => 1: baseEdge{from: "B", to: "C"}; {}
  baseEdge{from: "B", to: "C"}; {F: "B", T: "C"}
baseEdge => 2: baseEdge{from: "B", to: "C"}; {}
  baseEdge{from: "B", to: "C"}; {F: "B", I: "C"}
1 => 0: baseEdge{from: "B", to: "C"}; {F: "B", T: "C"}
  baseEdge{from: "B", to: "C"}; {F: "B", T: "C"}
2 => 4: baseEdge{from: "B", to: "C"}; {F: "B", I: "C"}
  edge{from: "B", to: "C"}; {F: "B", I: "C", T: "D"}
0 => edge: baseEdge{from: "B", to: "C"}; {F: "B", T: "C"}
  edge{from: "B", to: "C"}; {F: "B", T: "C"}
4 => 0: edge{from: "B", to: "C"}; {F: "B", I: "C", T: "D"}
  edge{from: "B", to: "C"}; {F: "B", I: "C", T: "D"}
edge => 3: edge{from: "B", to: "C"}; {F: "B", T: "C"}
  edge{from: "B", to: "C"}; {I: "B", T: "C"}
0 => edge: edge{from: "B", to: "C"}; {F: "B", I: "C", T: "D"}
  edge{from: "B", to: "D"}; {F: "B", I: "C", T: "D"}
3 => 4: edge{from: "B", to: "C"}; {I: "B", T: "C"}
  edge{from: "B", to: "C"}; {F: "A", I: "B", T: "C"}
edge => 3: edge{from: "B", to: "D"}; {F: "B", I: "C", T: "D"}
  edge{from: "B", to: "D"}; {I: "B", T: "D"}
4 => 0: edge{from: "B", to: "C"}; {F: "A", I: "B", T: "C"}
  edge{from: "B", to: "C"}; {F: "A", I: "B", T: "C"}
3 => 4: edge{from: "B", to: "D"}; {I: "B", T: "D"}
  edge{from: "B", to: "D"}; {F: "A", I: "B", T: "D"}
0 => edge: edge{from: "B", to: "C"}; {F: "A", I: "B", T: "C"}
  edge{from: "A", to: "C"}; {F: "A", I: "B", T: "C"}
4 => 0: edge{from: "B", to: "D"}; {F: "A", I: "B", T: "D"}
  edge{from: "B", to: "D"}; {F: "A", I: "B", T: "D"}
edge => 3: edge{from: "A", to: "C"}; {F: "A", I: "B", T: "C"}
  edge{from: "A", to: "C"}; {I: "A", T: "C"}
0 => edge: edge{from: "B", to: "D"}; {F: "A", I: "B", T: "D"}
  edge{from: "A", to: "D"}; {F: "A", I: "B", T: "D"}
3 => 4: edge{from: "A", to: "C"}; {I: "A", T: "C"}
edge => 3: edge{from: "A", to: "D"}; {F: "A", I: "B", T: "D"}
  edge{from: "A", to: "D"}; {I: "A", T: "D"}
3 => 4: edge{from: "A", to: "D"}; {I: "A", T: "D"}

edge{from: F, to: T}.
----
application/datalog
edge{from: "A", to: "B"}; {F: "A", T: "B"}.
edge{from: "C", to: "D"}; {F: "C", T: "D"}.
edge{from: "B", to: "C"}; {F: "B", T: "C"}.
edge{from: "B", to: "D"}; {F: "B", T: "D"}.
edge{from: "A", to: "C"}; {F: "A", T: "C"}.
edge{from: "A", to: "D"}; {F: "A", T: "D"}.
