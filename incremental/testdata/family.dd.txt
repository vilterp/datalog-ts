.load testdata/family.dl
----
text/plain

.rulegraph
----
application/graphviz
digraph G {
  "0" [fillcolor="lightblue" label="0: grandfather: Join(B: father.child = parent.parent) []" shape="box" style="filled"];
  "1" [fillcolor="lightblue" label="1: grandmother: Join(B: mother.child = parent.parent) []" shape="box" style="filled"];
  "2" [fillcolor="lightblue" label="2: grandparent: Join(B: parent.child = parent.parent) []" shape="box" style="filled"];
  "3" [fillcolor="cornsilk" label="3: Union []" shape="box" style="filled"];
  "4" [fillcolor="lightblue" label="4: parents: Join(C: father.child = mother.child) []" shape="box" style="filled"];
  "5" [fillcolor="lightblue" label="5: sibling: Join(F: parents.father = parents.father & M: parents.mother = parents.mother) []" shape="box" style="filled"];
  "6" [fillcolor="lavender" label="6: L != R []" shape="box" style="filled"];
  "7" [fillcolor="lightblue" label="7: cousin: Join(P1: sibling.left = parent.parent) []" shape="box" style="filled"];
  "8" [fillcolor="lightblue" label="8: cousin: Join(P2: parent.parent = 7.right) []" shape="box" style="filled"];
  "9" [fillcolor="lightblue" label="9: uncle: Join(P: brother.person = parent.parent) []" shape="box" style="filled"];
  "10" [fillcolor="lightblue" label="10: aunt: Join(P: sister.person = parent.parent) []" shape="box" style="filled"];
  "11" [fillcolor="lightblue" label="11: brother: Join(R: sibling.right = person.name) []" shape="box" style="filled"];
  "12" [fillcolor="lightblue" label="12: sister: Join(R: sibling.right = person.name) []" shape="box" style="filled"];
  "13" [fillcolor="cornsilk" label="13: Union []" shape="box" style="filled"];
  "14" [fillcolor="lightblue" label="14: ancestor: Join(Y: ancestor.desc = parent.parent) []" shape="box" style="filled"];
  "person" [fillcolor="lightgrey" label="person" shape="box" style="filled"]; // cache: [person{gender: "Male", name: "Paul"}; {}, person{gender: "Female", name: "Ann"}; {}]
  "mother" [fillcolor="lightgrey" label="mother" shape="box" style="filled"]; // cache: [mother{child: "Pete", mother: "Mary"}; {}, mother{child: "Paul", mother: "Judith"}; {}, mother{child: "Ann", mother: "Judith"}; {}, mother{child: "Bob", mother: "Ann"}; {}, mother{child: "Mary", mother: "Carolyn K"}; {}, mother{child: "Carolyn", mother: "Mary"}; {}]
  "father" [fillcolor="lightgrey" label="father" shape="box" style="filled"]; // cache: [father{child: "Pete", father: "Paul"}; {}, father{child: "Paul", father: "Peter"}; {}, father{child: "Ann", father: "Peter"}; {}, father{child: "Mary", father: "Mark"}; {}, father{child: "Bob", father: "John"}; {}, father{child: "Carolyn", father: "Paul"}; {}, father{child: "Henry", father: "Bob"}; {}]
  "grandfather" [fillcolor="darkseagreen1" label="grandfather: Subst({grandchild: A, grandfather: C}) []" shape="box" style="filled"];
  "grandmother" [fillcolor="darkseagreen1" label="grandmother: Subst({grandchild: A, grandmother: C}) []" shape="box" style="filled"];
  "grandparent" [fillcolor="darkseagreen1" label="grandparent: Subst({grandchild: A, grandparent: C}) []" shape="box" style="filled"];
  "parent" [fillcolor="darkseagreen1" label="parent: Subst({child: C, parent: P}) []" shape="box" style="filled"];
  "parents" [fillcolor="darkseagreen1" label="parents: Subst({child: C, father: F, mother: M}) []" shape="box" style="filled"];
  "sibling" [fillcolor="darkseagreen1" label="sibling: Subst({left: L, right: R}) []" shape="box" style="filled"];
  "cousin" [fillcolor="darkseagreen1" label="cousin: Subst({left: L, right: R}) []" shape="box" style="filled"];
  "uncle" [fillcolor="darkseagreen1" label="uncle: Subst({child: C, uncle: U}) []" shape="box" style="filled"];
  "aunt" [fillcolor="darkseagreen1" label="aunt: Subst({aunt: U, child: C}) []" shape="box" style="filled"];
  "brother" [fillcolor="darkseagreen1" label="brother: Subst({brother: R, person: L}) []" shape="box" style="filled"];
  "sister" [fillcolor="darkseagreen1" label="sister: Subst({person: L, sister: R}) []" shape="box" style="filled"];
  "ancestor" [fillcolor="darkseagreen1" label="ancestor: Subst({an: Z, desc: X}) []" shape="box" style="filled"];
  "0" -> "grandfather" [];
  "1" -> "grandmother" [];
  "10" -> "aunt" [];
  "11" -> "brother" [];
  "12" -> "sister" [];
  "13" -> "ancestor" [];
  "14" -> "13" [];
  "2" -> "grandparent" [];
  "3" -> "parent" [];
  "4" -> "parents" [];
  "5" -> "6" [];
  "6" -> "sibling" [];
  "7" -> "8" [];
  "8" -> "cousin" [];
  "9" -> "uncle" [];
  "ancestor" -> "14" [];
  "brother" -> "9" [];
  "father" -> "0" [];
  "father" -> "3" [];
  "father" -> "4" [];
  "mother" -> "1" [];
  "mother" -> "3" [];
  "mother" -> "4" [];
  "parent" -> "0" [];
  "parent" -> "1" [];
  "parent" -> "2" [];
  "parent" -> "2" [];
  "parent" -> "7" [];
  "parent" -> "8" [];
  "parent" -> "9" [];
  "parent" -> "10" [];
  "parent" -> "13" [];
  "parent" -> "14" [];
  "parents" -> "5" [];
  "parents" -> "5" [];
  "person" -> "11" [];
  "person" -> "12" [];
  "sibling" -> "7" [];
  "sibling" -> "11" [];
  "sibling" -> "12" [];
  "sister" -> "10" [];
}
