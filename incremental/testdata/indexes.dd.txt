.table need
----
text/plain

.table worker
----
text/plain

.table fundingSource
----
text/plain

opportunity{worker: N, capability: C, objective: O, fundingSource: S} :-
  need{capability: C, objective: O} &
  worker{name: N, capability: C} &
  fundingSource{objective: O, source: S}.
----
text/propagation-log

.rulegraph
----
application/graphviz
digraph G {
  "0" [fillcolor="darkseagreen2" label="0: Match(need{capability: C, objective: O}; {}) [C]" shape="box" style="filled"];
  "1" [fillcolor="darkseagreen2" label="1: Match(worker{capability: C, name: N}; {}) [C]" shape="box" style="filled"];
  "2" [fillcolor="thistle" label="2: Join(opportunity, C: 1.capability = 0.capability) []" shape="box" style="filled"];
  "3" [fillcolor="darkseagreen2" label="3: Match(fundingSource{objective: O, source: S}; {}) []" shape="box" style="filled"];
  "4" [fillcolor="thistle" label="4: Join(opportunity, ) []" shape="box" style="filled"];
  "need" [fillcolor="darksalmon" label="need:  []" shape="box" style="filled"];
  "worker" [fillcolor="darksalmon" label="worker:  []" shape="box" style="filled"];
  "fundingSource" [fillcolor="darksalmon" label="fundingSource:  []" shape="box" style="filled"];
  "opportunity" [fillcolor="lightblue" label="opportunity: Subst({capability: C, fundingSource: S, objective: O, worker: N}) []" shape="box" style="filled"];
  "0" -> "2" [];
  "1" -> "2" [];
  "2" -> "4" [];
  "3" -> "4" [];
  "4" -> "opportunity" [];
  "fundingSource" -> "3" [];
  "need" -> "0" [];
  "worker" -> "1" [];
}

need{capability: "write HTML", objective: "make website"}.
----
text/propagation-log
need from null: need{capability: "write HTML", objective: "make website"}; {}. 
  need{capability: "write HTML", objective: "make website"}; {}
0 from need: need{capability: "write HTML", objective: "make website"}; {}. Match(need{capability: C, objective: O}; {})
  need{capability: "write HTML", objective: "make website"}; {C: "write HTML", O: "make website"}
2 from 0: need{capability: "write HTML", objective: "make website"}; {C: "write HTML", O: "make website"}. Join(opportunity, C: 1.capability = 0.capability)

worker{name: "Pete", capability: "write HTML"}.
----
text/propagation-log
worker from null: worker{capability: "write HTML", name: "Pete"}; {}. 
  worker{capability: "write HTML", name: "Pete"}; {}
1 from worker: worker{capability: "write HTML", name: "Pete"}; {}. Match(worker{capability: C, name: N}; {})
  worker{capability: "write HTML", name: "Pete"}; {C: "write HTML", N: "Pete"}
2 from 1: worker{capability: "write HTML", name: "Pete"}; {C: "write HTML", N: "Pete"}. Join(opportunity, C: 1.capability = 0.capability)
  opportunity{capability: "write HTML", name: "Pete"}; {C: "write HTML", N: "Pete", O: "make website"}
4 from 2: opportunity{capability: "write HTML", name: "Pete"}; {C: "write HTML", N: "Pete", O: "make website"}. Join(opportunity, )

fundingSource{objective: "make website", source: "some company"}.
----
text/propagation-log
fundingSource from null: fundingSource{objective: "make website", source: "some company"}; {}. 
  fundingSource{objective: "make website", source: "some company"}; {}
3 from fundingSource: fundingSource{objective: "make website", source: "some company"}; {}. Match(fundingSource{objective: O, source: S}; {})
  fundingSource{objective: "make website", source: "some company"}; {O: "make website", S: "some company"}
4 from 3: fundingSource{objective: "make website", source: "some company"}; {O: "make website", S: "some company"}. Join(opportunity, )
  opportunity{objective: "make website", source: "some company"}; {C: "write HTML", N: "Pete", O: "make website", S: "some company"}
opportunity from 4: opportunity{objective: "make website", source: "some company"}; {C: "write HTML", N: "Pete", O: "make website", S: "some company"}. Subst({capability: C, fundingSource: S, objective: O, worker: N})
  opportunity{capability: "write HTML", fundingSource: "some company", objective: "make website", worker: "Pete"}; {C: "write HTML", N: "Pete", O: "make website", S: "some company"}
