.load fp/dl/ast.dl
----
text/plain

.load fp/dl/typecheck.dl
----
text/plain

.load fp/dl/stdlib.dl
----
text/plain

ast.RootExpr{id: 0}.
----
text/plain
ast.RootExpr: [ast.RootExpr{id: 0}; {}]
58: [ast.RootExpr{id: 0}; {I: 0}]
60: [tc.scopeBuiltin{id: 0}; {I: 0, N: "intToString", T: tapp{from: "int", to: "string"}}, tc.scopeBuiltin{id: 0}; {I: 0, N: "plus", T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}, tc.scopeBuiltin{id: 0}; {I: 0, N: "concat", T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
tc.scopeBuiltin: [tc.scopeBuiltin{id: 0, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 0, N: "intToString", T: tapp{from: "int", to: "string"}}]
tc.scopeBuiltin: [tc.scopeBuiltin{id: 0, location: "builtin", name: "plus", type: tapp{from: "int", to: tapp{from: "int", to: "int"}}}; {I: 0, N: "plus", T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
tc.scopeBuiltin: [tc.scopeBuiltin{id: 0, location: "builtin", name: "concat", type: tapp{from: "string", to: tapp{from: "string", to: "string"}}}; {I: 0, N: "concat", T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
52: [tc.scopeBuiltin{id: 0, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 0, L: "builtin", N: "intToString", T: tapp{from: "int", to: "string"}}]
52: [tc.scopeBuiltin{id: 0, location: "builtin", name: "plus", type: tapp{from: "int", to: tapp{from: "int", to: "int"}}}; {I: 0, L: "builtin", N: "plus", T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
52: [tc.scopeBuiltin{id: 0, location: "builtin", name: "concat", type: tapp{from: "string", to: tapp{from: "string", to: "string"}}}; {I: 0, L: "builtin", N: "concat", T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
51: [tc.scopeBuiltin{id: 0, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 0, L: "builtin", N: "intToString", T: tapp{from: "int", to: "string"}}]
51: [tc.scopeBuiltin{id: 0, location: "builtin", name: "plus", type: tapp{from: "int", to: tapp{from: "int", to: "int"}}}; {I: 0, L: "builtin", N: "plus", T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
51: [tc.scopeBuiltin{id: 0, location: "builtin", name: "concat", type: tapp{from: "string", to: tapp{from: "string", to: "string"}}}; {I: 0, L: "builtin", N: "concat", T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
tc.ScopeItem: [tc.ScopeItem{id: 0, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 0, L: "builtin", N: "intToString", T: tapp{from: "int", to: "string"}}]
tc.ScopeItem: [tc.ScopeItem{id: 0, location: "builtin", name: "plus", type: tapp{from: "int", to: tapp{from: "int", to: "int"}}}; {I: 0, L: "builtin", N: "plus", T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
tc.ScopeItem: [tc.ScopeItem{id: 0, location: "builtin", name: "concat", type: tapp{from: "string", to: tapp{from: "string", to: "string"}}}; {I: 0, L: "builtin", N: "concat", T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
43: [tc.ScopeItem{id: 0, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 0, N: "intToString", T: tapp{from: "int", to: "string"}}]
56: [tc.ScopeItem{id: 0, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}]
43: [tc.ScopeItem{id: 0, location: "builtin", name: "plus", type: tapp{from: "int", to: tapp{from: "int", to: "int"}}}; {I: 0, N: "plus", T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
56: [tc.ScopeItem{id: 0, location: "builtin", name: "plus", type: tapp{from: "int", to: tapp{from: "int", to: "int"}}}; {L: "builtin", N: "plus", P: 0, T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
43: [tc.ScopeItem{id: 0, location: "builtin", name: "concat", type: tapp{from: "string", to: tapp{from: "string", to: "string"}}}; {I: 0, N: "concat", T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
56: [tc.ScopeItem{id: 0, location: "builtin", name: "concat", type: tapp{from: "string", to: tapp{from: "string", to: "string"}}}; {L: "builtin", N: "concat", P: 0, T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
44: []
57: []
44: []
57: []
44: []
57: []

ast.LetExpr{bindingID: 1, bodyID: 2, id: 0, inLoc: span{from: 10, to: 13}, letLoc: span{from: 0, to: 4}, location: span{from: 0, to: 26}, varLoc: span{from: 4, to: 5}, varName: "x"}.
----
text/plain
ast.LetExpr: [ast.LetExpr{bindingID: 1, bodyID: 2, id: 0, inLoc: span{from: 10, to: 13}, letLoc: span{from: 0, to: 4}, location: span{from: 0, to: 26}, varLoc: span{from: 4, to: 5}, varName: "x"}; {}]
4: [ast.LetExpr{bindingID: 1, bodyID: 2, id: 0, inLoc: span{from: 10, to: 13}, letLoc: span{from: 0, to: 4}, location: span{from: 0, to: 26}, varLoc: span{from: 4, to: 5}, varName: "x"}; {I: 0, S: span{from: 0, to: 26}}]
10: [ast.LetExpr{bindingID: 1, bodyID: 2, id: 0, inLoc: span{from: 10, to: 13}, letLoc: span{from: 0, to: 4}, location: span{from: 0, to: 26}, varLoc: span{from: 4, to: 5}, varName: "x"}; {I: 2, P: 0}]
13: [ast.LetExpr{bindingID: 1, bodyID: 2, id: 0, inLoc: span{from: 10, to: 13}, letLoc: span{from: 0, to: 4}, location: span{from: 0, to: 26}, varLoc: span{from: 4, to: 5}, varName: "x"}; {I: 1, P: 0}]
39: [ast.LetExpr{bindingID: 1, bodyID: 2, id: 0, inLoc: span{from: 10, to: 13}, letLoc: span{from: 0, to: 4}, location: span{from: 0, to: 26}, varLoc: span{from: 4, to: 5}, varName: "x"}; {BID: 2, I: 0}]
61: [ast.LetExpr{bindingID: 1, bodyID: 2, id: 0, inLoc: span{from: 10, to: 13}, letLoc: span{from: 0, to: 4}, location: span{from: 0, to: 26}, varLoc: span{from: 4, to: 5}, varName: "x"}; {B: 1, I: 2, L: span{from: 4, to: 5}, N: "x"}]
68: [ast.LetExpr{bindingID: 1, bodyID: 2, id: 0, inLoc: span{from: 10, to: 13}, letLoc: span{from: 0, to: 4}, location: span{from: 0, to: 26}, varLoc: span{from: 4, to: 5}, varName: "x"}; {I: 2, P: 0}]
69: [ast.LetExpr{bindingID: 1, bodyID: 2, id: 0, inLoc: span{from: 10, to: 13}, letLoc: span{from: 0, to: 4}, location: span{from: 0, to: 26}, varLoc: span{from: 4, to: 5}, varName: "x"}; {I: 1, P: 0}]
0: [ast.LetExpr{bindingID: 1, bodyID: 2, id: 0, inLoc: span{from: 10, to: 13}, letLoc: span{from: 0, to: 4}, location: span{from: 0, to: 26}, varLoc: span{from: 4, to: 5}, varName: "x"}; {I: 0, S: span{from: 0, to: 26}}]
11: []
14: []
41: []
63: []
67: [ast.LetExpr{bindingID: 1, bodyID: 2, id: 0, inLoc: span{from: 10, to: 13}, letLoc: span{from: 0, to: 4}, location: span{from: 0, to: 26}, varLoc: span{from: 4, to: 5}, varName: "x"}; {I: 2, P: 0}]
67: [ast.LetExpr{bindingID: 1, bodyID: 2, id: 0, inLoc: span{from: 10, to: 13}, letLoc: span{from: 0, to: 4}, location: span{from: 0, to: 26}, varLoc: span{from: 4, to: 5}, varName: "x"}; {I: 1, P: 0}]
ast.Expr: [ast.Expr{id: 0, location: span{from: 0, to: 26}}; {I: 0, S: span{from: 0, to: 26}}]
tc.parentScope: [tc.parentScope{id: 2, parentID: 0}; {I: 2, P: 0}]
tc.parentScope: [tc.parentScope{id: 1, parentID: 0}; {I: 1, P: 0}]
9: [ast.Expr{id: 0, location: span{from: 0, to: 26}}; {I: 0, S: span{from: 0, to: 26}}]
12: [ast.Expr{id: 0, location: span{from: 0, to: 26}}; {I: 0, S: span{from: 0, to: 26}}]
15: [ast.Expr{id: 0, location: span{from: 0, to: 26}}; {I: 0, S: span{from: 0, to: 26}}]
18: [ast.Expr{id: 0, location: span{from: 0, to: 26}}; {I: 0, S: span{from: 0, to: 26}}]
21: [ast.Expr{id: 0, location: span{from: 0, to: 26}}; {I: 0, S: span{from: 0, to: 26}}]
55: [tc.parentScope{id: 2, parentID: 0}; {I: 2, P: 0}]
55: [tc.parentScope{id: 1, parentID: 0}; {I: 1, P: 0}]
11: []
14: []
17: []
20: []
23: []
57: [tc.ScopeItem{id: 2, parentID: 0}; {I: 2, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}, tc.ScopeItem{id: 2, parentID: 0}; {I: 2, L: "builtin", N: "plus", P: 0, T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}, tc.ScopeItem{id: 2, parentID: 0}; {I: 2, L: "builtin", N: "concat", P: 0, T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
57: [tc.ScopeItem{id: 1, parentID: 0}; {I: 1, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}, tc.ScopeItem{id: 1, parentID: 0}; {I: 1, L: "builtin", N: "plus", P: 0, T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}, tc.ScopeItem{id: 1, parentID: 0}; {I: 1, L: "builtin", N: "concat", P: 0, T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
51: [tc.ScopeItem{id: 2, parentID: 0}; {I: 2, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}]
51: [tc.ScopeItem{id: 2, parentID: 0}; {I: 2, L: "builtin", N: "plus", P: 0, T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
51: [tc.ScopeItem{id: 2, parentID: 0}; {I: 2, L: "builtin", N: "concat", P: 0, T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
51: [tc.ScopeItem{id: 1, parentID: 0}; {I: 1, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}]
51: [tc.ScopeItem{id: 1, parentID: 0}; {I: 1, L: "builtin", N: "plus", P: 0, T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
51: [tc.ScopeItem{id: 1, parentID: 0}; {I: 1, L: "builtin", N: "concat", P: 0, T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
tc.ScopeItem: [tc.ScopeItem{id: 2, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 2, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}]
tc.ScopeItem: [tc.ScopeItem{id: 2, location: "builtin", name: "plus", type: tapp{from: "int", to: tapp{from: "int", to: "int"}}}; {I: 2, L: "builtin", N: "plus", P: 0, T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
tc.ScopeItem: [tc.ScopeItem{id: 2, location: "builtin", name: "concat", type: tapp{from: "string", to: tapp{from: "string", to: "string"}}}; {I: 2, L: "builtin", N: "concat", P: 0, T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
tc.ScopeItem: [tc.ScopeItem{id: 1, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 1, L: "builtin", N: "intToString", P: 0, T: tapp{from: "int", to: "string"}}]
tc.ScopeItem: [tc.ScopeItem{id: 1, location: "builtin", name: "plus", type: tapp{from: "int", to: tapp{from: "int", to: "int"}}}; {I: 1, L: "builtin", N: "plus", P: 0, T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
tc.ScopeItem: [tc.ScopeItem{id: 1, location: "builtin", name: "concat", type: tapp{from: "string", to: tapp{from: "string", to: "string"}}}; {I: 1, L: "builtin", N: "concat", P: 0, T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
43: [tc.ScopeItem{id: 2, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 2, N: "intToString", T: tapp{from: "int", to: "string"}}]
56: [tc.ScopeItem{id: 2, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {L: "builtin", N: "intToString", P: 2, T: tapp{from: "int", to: "string"}}]
43: [tc.ScopeItem{id: 2, location: "builtin", name: "plus", type: tapp{from: "int", to: tapp{from: "int", to: "int"}}}; {I: 2, N: "plus", T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
56: [tc.ScopeItem{id: 2, location: "builtin", name: "plus", type: tapp{from: "int", to: tapp{from: "int", to: "int"}}}; {L: "builtin", N: "plus", P: 2, T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
43: [tc.ScopeItem{id: 2, location: "builtin", name: "concat", type: tapp{from: "string", to: tapp{from: "string", to: "string"}}}; {I: 2, N: "concat", T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
56: [tc.ScopeItem{id: 2, location: "builtin", name: "concat", type: tapp{from: "string", to: tapp{from: "string", to: "string"}}}; {L: "builtin", N: "concat", P: 2, T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
43: [tc.ScopeItem{id: 1, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 1, N: "intToString", T: tapp{from: "int", to: "string"}}]
56: [tc.ScopeItem{id: 1, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {L: "builtin", N: "intToString", P: 1, T: tapp{from: "int", to: "string"}}]
43: [tc.ScopeItem{id: 1, location: "builtin", name: "plus", type: tapp{from: "int", to: tapp{from: "int", to: "int"}}}; {I: 1, N: "plus", T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
56: [tc.ScopeItem{id: 1, location: "builtin", name: "plus", type: tapp{from: "int", to: tapp{from: "int", to: "int"}}}; {L: "builtin", N: "plus", P: 1, T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
43: [tc.ScopeItem{id: 1, location: "builtin", name: "concat", type: tapp{from: "string", to: tapp{from: "string", to: "string"}}}; {I: 1, N: "concat", T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
56: [tc.ScopeItem{id: 1, location: "builtin", name: "concat", type: tapp{from: "string", to: tapp{from: "string", to: "string"}}}; {L: "builtin", N: "concat", P: 1, T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
44: []
57: []
44: []
57: []
44: []
57: []
44: []
57: []
44: []
57: []
44: []
57: []

ast.IntLit{id: 1, location: span{from: 8, to: 9}, val: 2}.
----
text/plain
ast.IntLit: [ast.IntLit{id: 1, location: span{from: 8, to: 9}, val: 2}; {}]
2: [ast.IntLit{id: 1, location: span{from: 8, to: 9}, val: 2}; {I: 1, S: span{from: 8, to: 9}}]
33: [ast.IntLit{id: 1, location: span{from: 8, to: 9}, val: 2}; {I: 1}]
0: [ast.IntLit{id: 1, location: span{from: 8, to: 9}, val: 2}; {I: 1, S: span{from: 8, to: 9}}]
tc.typeI: [tc.typeI{id: 1, type: "int"}; {I: 1}]
ast.Expr: [ast.Expr{id: 1, location: span{from: 8, to: 9}}; {I: 1, S: span{from: 8, to: 9}}]
26: [tc.typeI{id: 1, type: "int"}; {I: 1, T: "int"}]
9: [ast.Expr{id: 1, location: span{from: 8, to: 9}}; {I: 1, S: span{from: 8, to: 9}}]
12: [ast.Expr{id: 1, location: span{from: 8, to: 9}}; {I: 1, S: span{from: 8, to: 9}}]
15: [ast.Expr{id: 1, location: span{from: 8, to: 9}}; {I: 1, S: span{from: 8, to: 9}}]
18: [ast.Expr{id: 1, location: span{from: 8, to: 9}}; {I: 1, S: span{from: 8, to: 9}}]
21: [ast.Expr{id: 1, location: span{from: 8, to: 9}}; {I: 1, S: span{from: 8, to: 9}}]
24: [tc.typeI{id: 1, type: "int"}; {I: 1, T: "int"}]
11: []
14: [ast.ParentExpr{id: 1, location: span{from: 8, to: 9}}; {I: 1, P: 0, S: span{from: 8, to: 9}}]
17: []
20: []
23: []
tc.Type: [tc.Type{id: 1, type: "int"}; {I: 1, T: "int"}]
8: [ast.ParentExpr{id: 1, location: span{from: 8, to: 9}}; {I: 1, P: 0, S: span{from: 8, to: 9}}]
35: []
37: [tc.Type{id: 1, type: "int"}; {AID: 1, F: "int"}]
40: [tc.Type{id: 1, type: "int"}; {BID: 1, T: "int"}]
48: [tc.Type{id: 1, type: "int"}; {B: 1, R: "int"}]
62: [tc.Type{id: 1, type: "int"}; {B: 1, T: "int"}]
ast.ParentExpr: [ast.ParentExpr{id: 1, parent: 0, span: span{from: 8, to: 9}}; {I: 1, P: 0, S: span{from: 8, to: 9}}]
38: []
41: []
49: []
63: [tc.scopeLet{id: 1, type: "int"}; {B: 1, I: 2, L: span{from: 4, to: 5}, N: "x", T: "int"}]
tc.scopeLet: [tc.scopeLet{id: 2, location: span{from: 4, to: 5}, name: "x", type: "int"}; {B: 1, I: 2, L: span{from: 4, to: 5}, N: "x", T: "int"}]
53: [tc.scopeLet{id: 2, location: span{from: 4, to: 5}, name: "x", type: "int"}; {I: 2, L: span{from: 4, to: 5}, N: "x", T: "int"}]
51: [tc.scopeLet{id: 2, location: span{from: 4, to: 5}, name: "x", type: "int"}; {I: 2, L: span{from: 4, to: 5}, N: "x", T: "int"}]
tc.ScopeItem: [tc.ScopeItem{id: 2, location: span{from: 4, to: 5}, name: "x", type: "int"}; {I: 2, L: span{from: 4, to: 5}, N: "x", T: "int"}]
43: [tc.ScopeItem{id: 2, location: span{from: 4, to: 5}, name: "x", type: "int"}; {I: 2, N: "x", T: "int"}]
56: [tc.ScopeItem{id: 2, location: span{from: 4, to: 5}, name: "x", type: "int"}; {L: span{from: 4, to: 5}, N: "x", P: 2, T: "int"}]
44: []
57: []

ast.FuncCall{argID: 4, funcID: 3, id: 2, location: span{from: 13, to: 26}}.
----
text/plain
ast.FuncCall: [ast.FuncCall{argID: 4, funcID: 3, id: 2, location: span{from: 13, to: 26}}; {}]
5: [ast.FuncCall{argID: 4, funcID: 3, id: 2, location: span{from: 13, to: 26}}; {I: 2, S: span{from: 13, to: 26}}]
16: [ast.FuncCall{argID: 4, funcID: 3, id: 2, location: span{from: 13, to: 26}}; {I: 3, P: 2}]
19: [ast.FuncCall{argID: 4, funcID: 3, id: 2, location: span{from: 13, to: 26}}; {I: 4, P: 2}]
34: [ast.FuncCall{argID: 4, funcID: 3, id: 2, location: span{from: 13, to: 26}}; {AID: 4, FID: 3, I: 2}]
70: [ast.FuncCall{argID: 4, funcID: 3, id: 2, location: span{from: 13, to: 26}}; {I: 4, P: 2}]
71: [ast.FuncCall{argID: 4, funcID: 3, id: 2, location: span{from: 13, to: 26}}; {I: 3, P: 2}]
0: [ast.FuncCall{argID: 4, funcID: 3, id: 2, location: span{from: 13, to: 26}}; {I: 2, S: span{from: 13, to: 26}}]
17: []
20: []
36: []
67: [ast.FuncCall{argID: 4, funcID: 3, id: 2, location: span{from: 13, to: 26}}; {I: 4, P: 2}]
67: [ast.FuncCall{argID: 4, funcID: 3, id: 2, location: span{from: 13, to: 26}}; {I: 3, P: 2}]
ast.Expr: [ast.Expr{id: 2, location: span{from: 13, to: 26}}; {I: 2, S: span{from: 13, to: 26}}]
tc.parentScope: [tc.parentScope{id: 4, parentID: 2}; {I: 4, P: 2}]
tc.parentScope: [tc.parentScope{id: 3, parentID: 2}; {I: 3, P: 2}]
9: [ast.Expr{id: 2, location: span{from: 13, to: 26}}; {I: 2, S: span{from: 13, to: 26}}]
12: [ast.Expr{id: 2, location: span{from: 13, to: 26}}; {I: 2, S: span{from: 13, to: 26}}]
15: [ast.Expr{id: 2, location: span{from: 13, to: 26}}; {I: 2, S: span{from: 13, to: 26}}]
18: [ast.Expr{id: 2, location: span{from: 13, to: 26}}; {I: 2, S: span{from: 13, to: 26}}]
21: [ast.Expr{id: 2, location: span{from: 13, to: 26}}; {I: 2, S: span{from: 13, to: 26}}]
55: [tc.parentScope{id: 4, parentID: 2}; {I: 4, P: 2}]
55: [tc.parentScope{id: 3, parentID: 2}; {I: 3, P: 2}]
11: [ast.ParentExpr{id: 2, location: span{from: 13, to: 26}}; {I: 2, P: 0, S: span{from: 13, to: 26}}]
14: []
17: []
20: []
23: []
57: [tc.ScopeItem{id: 4, parentID: 2}; {I: 4, L: "builtin", N: "intToString", P: 2, T: tapp{from: "int", to: "string"}}, tc.ScopeItem{id: 4, parentID: 2}; {I: 4, L: "builtin", N: "plus", P: 2, T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}, tc.ScopeItem{id: 4, parentID: 2}; {I: 4, L: "builtin", N: "concat", P: 2, T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}, tc.ScopeItem{id: 4, parentID: 2}; {I: 4, L: span{from: 4, to: 5}, N: "x", P: 2, T: "int"}]
57: [tc.ScopeItem{id: 3, parentID: 2}; {I: 3, L: "builtin", N: "intToString", P: 2, T: tapp{from: "int", to: "string"}}, tc.ScopeItem{id: 3, parentID: 2}; {I: 3, L: "builtin", N: "plus", P: 2, T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}, tc.ScopeItem{id: 3, parentID: 2}; {I: 3, L: "builtin", N: "concat", P: 2, T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}, tc.ScopeItem{id: 3, parentID: 2}; {I: 3, L: span{from: 4, to: 5}, N: "x", P: 2, T: "int"}]
8: [ast.ParentExpr{id: 2, location: span{from: 13, to: 26}}; {I: 2, P: 0, S: span{from: 13, to: 26}}]
51: [tc.ScopeItem{id: 4, parentID: 2}; {I: 4, L: "builtin", N: "intToString", P: 2, T: tapp{from: "int", to: "string"}}]
51: [tc.ScopeItem{id: 4, parentID: 2}; {I: 4, L: "builtin", N: "plus", P: 2, T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
51: [tc.ScopeItem{id: 4, parentID: 2}; {I: 4, L: "builtin", N: "concat", P: 2, T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
51: [tc.ScopeItem{id: 4, parentID: 2}; {I: 4, L: span{from: 4, to: 5}, N: "x", P: 2, T: "int"}]
51: [tc.ScopeItem{id: 3, parentID: 2}; {I: 3, L: "builtin", N: "intToString", P: 2, T: tapp{from: "int", to: "string"}}]
51: [tc.ScopeItem{id: 3, parentID: 2}; {I: 3, L: "builtin", N: "plus", P: 2, T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
51: [tc.ScopeItem{id: 3, parentID: 2}; {I: 3, L: "builtin", N: "concat", P: 2, T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
51: [tc.ScopeItem{id: 3, parentID: 2}; {I: 3, L: span{from: 4, to: 5}, N: "x", P: 2, T: "int"}]
ast.ParentExpr: [ast.ParentExpr{id: 2, parent: 0, span: span{from: 13, to: 26}}; {I: 2, P: 0, S: span{from: 13, to: 26}}]
tc.ScopeItem: [tc.ScopeItem{id: 4, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 4, L: "builtin", N: "intToString", P: 2, T: tapp{from: "int", to: "string"}}]
tc.ScopeItem: [tc.ScopeItem{id: 4, location: "builtin", name: "plus", type: tapp{from: "int", to: tapp{from: "int", to: "int"}}}; {I: 4, L: "builtin", N: "plus", P: 2, T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
tc.ScopeItem: [tc.ScopeItem{id: 4, location: "builtin", name: "concat", type: tapp{from: "string", to: tapp{from: "string", to: "string"}}}; {I: 4, L: "builtin", N: "concat", P: 2, T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
tc.ScopeItem: [tc.ScopeItem{id: 4, location: span{from: 4, to: 5}, name: "x", type: "int"}; {I: 4, L: span{from: 4, to: 5}, N: "x", P: 2, T: "int"}]
tc.ScopeItem: [tc.ScopeItem{id: 3, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 3, L: "builtin", N: "intToString", P: 2, T: tapp{from: "int", to: "string"}}]
tc.ScopeItem: [tc.ScopeItem{id: 3, location: "builtin", name: "plus", type: tapp{from: "int", to: tapp{from: "int", to: "int"}}}; {I: 3, L: "builtin", N: "plus", P: 2, T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
tc.ScopeItem: [tc.ScopeItem{id: 3, location: "builtin", name: "concat", type: tapp{from: "string", to: tapp{from: "string", to: "string"}}}; {I: 3, L: "builtin", N: "concat", P: 2, T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
tc.ScopeItem: [tc.ScopeItem{id: 3, location: span{from: 4, to: 5}, name: "x", type: "int"}; {I: 3, L: span{from: 4, to: 5}, N: "x", P: 2, T: "int"}]
43: [tc.ScopeItem{id: 4, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 4, N: "intToString", T: tapp{from: "int", to: "string"}}]
56: [tc.ScopeItem{id: 4, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {L: "builtin", N: "intToString", P: 4, T: tapp{from: "int", to: "string"}}]
43: [tc.ScopeItem{id: 4, location: "builtin", name: "plus", type: tapp{from: "int", to: tapp{from: "int", to: "int"}}}; {I: 4, N: "plus", T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
56: [tc.ScopeItem{id: 4, location: "builtin", name: "plus", type: tapp{from: "int", to: tapp{from: "int", to: "int"}}}; {L: "builtin", N: "plus", P: 4, T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
43: [tc.ScopeItem{id: 4, location: "builtin", name: "concat", type: tapp{from: "string", to: tapp{from: "string", to: "string"}}}; {I: 4, N: "concat", T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
56: [tc.ScopeItem{id: 4, location: "builtin", name: "concat", type: tapp{from: "string", to: tapp{from: "string", to: "string"}}}; {L: "builtin", N: "concat", P: 4, T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
43: [tc.ScopeItem{id: 4, location: span{from: 4, to: 5}, name: "x", type: "int"}; {I: 4, N: "x", T: "int"}]
56: [tc.ScopeItem{id: 4, location: span{from: 4, to: 5}, name: "x", type: "int"}; {L: span{from: 4, to: 5}, N: "x", P: 4, T: "int"}]
43: [tc.ScopeItem{id: 3, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {I: 3, N: "intToString", T: tapp{from: "int", to: "string"}}]
56: [tc.ScopeItem{id: 3, location: "builtin", name: "intToString", type: tapp{from: "int", to: "string"}}; {L: "builtin", N: "intToString", P: 3, T: tapp{from: "int", to: "string"}}]
43: [tc.ScopeItem{id: 3, location: "builtin", name: "plus", type: tapp{from: "int", to: tapp{from: "int", to: "int"}}}; {I: 3, N: "plus", T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
56: [tc.ScopeItem{id: 3, location: "builtin", name: "plus", type: tapp{from: "int", to: tapp{from: "int", to: "int"}}}; {L: "builtin", N: "plus", P: 3, T: tapp{from: "int", to: tapp{from: "int", to: "int"}}}]
43: [tc.ScopeItem{id: 3, location: "builtin", name: "concat", type: tapp{from: "string", to: tapp{from: "string", to: "string"}}}; {I: 3, N: "concat", T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
56: [tc.ScopeItem{id: 3, location: "builtin", name: "concat", type: tapp{from: "string", to: tapp{from: "string", to: "string"}}}; {L: "builtin", N: "concat", P: 3, T: tapp{from: "string", to: tapp{from: "string", to: "string"}}}]
43: [tc.ScopeItem{id: 3, location: span{from: 4, to: 5}, name: "x", type: "int"}; {I: 3, N: "x", T: "int"}]
56: [tc.ScopeItem{id: 3, location: span{from: 4, to: 5}, name: "x", type: "int"}; {L: span{from: 4, to: 5}, N: "x", P: 3, T: "int"}]
44: []
57: []
44: []
57: []
44: []
57: []
44: []
57: []
44: []
57: []
44: []
57: []
44: []
57: []
44: []
57: []

ast.Var{id: 3, location: span{from: 13, to: 23}, name: "int2string"}.
----
text/plain
ast.Var: [ast.Var{id: 3, location: span{from: 13, to: 23}, name: "int2string"}; {}]
3: [ast.Var{id: 3, location: span{from: 13, to: 23}, name: "int2string"}; {I: 3, S: span{from: 13, to: 23}}]
42: [ast.Var{id: 3, location: span{from: 13, to: 23}, name: "int2string"}; {I: 3, N: "int2string"}]
0: [ast.Var{id: 3, location: span{from: 13, to: 23}, name: "int2string"}; {I: 3, S: span{from: 13, to: 23}}]
44: []
ast.Expr: [ast.Expr{id: 3, location: span{from: 13, to: 23}}; {I: 3, S: span{from: 13, to: 23}}]
9: [ast.Expr{id: 3, location: span{from: 13, to: 23}}; {I: 3, S: span{from: 13, to: 23}}]
12: [ast.Expr{id: 3, location: span{from: 13, to: 23}}; {I: 3, S: span{from: 13, to: 23}}]
15: [ast.Expr{id: 3, location: span{from: 13, to: 23}}; {I: 3, S: span{from: 13, to: 23}}]
18: [ast.Expr{id: 3, location: span{from: 13, to: 23}}; {I: 3, S: span{from: 13, to: 23}}]
21: [ast.Expr{id: 3, location: span{from: 13, to: 23}}; {I: 3, S: span{from: 13, to: 23}}]
11: []
14: []
17: [ast.ParentExpr{id: 3, location: span{from: 13, to: 23}}; {I: 3, P: 2, S: span{from: 13, to: 23}}]
20: []
23: []
8: [ast.ParentExpr{id: 3, location: span{from: 13, to: 23}}; {I: 3, P: 2, S: span{from: 13, to: 23}}]
ast.ParentExpr: [ast.ParentExpr{id: 3, parent: 2, span: span{from: 13, to: 23}}; {I: 3, P: 2, S: span{from: 13, to: 23}}]

ast.Var{id: 4, location: span{from: 24, to: 25}, name: "x"}.
----
text/plain
ast.Var: [ast.Var{id: 4, location: span{from: 24, to: 25}, name: "x"}; {}]
3: [ast.Var{id: 4, location: span{from: 24, to: 25}, name: "x"}; {I: 4, S: span{from: 24, to: 25}}]
42: [ast.Var{id: 4, location: span{from: 24, to: 25}, name: "x"}; {I: 4, N: "x"}]
0: [ast.Var{id: 4, location: span{from: 24, to: 25}, name: "x"}; {I: 4, S: span{from: 24, to: 25}}]
44: [tc.typeVar{id: 4, location: span{from: 24, to: 25}, name: "x"}; {I: 4, N: "x", T: "int"}]
ast.Expr: [ast.Expr{id: 4, location: span{from: 24, to: 25}}; {I: 4, S: span{from: 24, to: 25}}]
tc.typeVar: [tc.typeVar{id: 4, type: "int"}; {I: 4, N: "x", T: "int"}]
9: [ast.Expr{id: 4, location: span{from: 24, to: 25}}; {I: 4, S: span{from: 24, to: 25}}]
12: [ast.Expr{id: 4, location: span{from: 24, to: 25}}; {I: 4, S: span{from: 24, to: 25}}]
15: [ast.Expr{id: 4, location: span{from: 24, to: 25}}; {I: 4, S: span{from: 24, to: 25}}]
18: [ast.Expr{id: 4, location: span{from: 24, to: 25}}; {I: 4, S: span{from: 24, to: 25}}]
21: [ast.Expr{id: 4, location: span{from: 24, to: 25}}; {I: 4, S: span{from: 24, to: 25}}]
30: [tc.typeVar{id: 4, type: "int"}; {I: 4, T: "int"}]
11: []
14: []
17: []
20: [ast.ParentExpr{id: 4, location: span{from: 24, to: 25}}; {I: 4, P: 2, S: span{from: 24, to: 25}}]
23: []
24: [tc.typeVar{id: 4, type: "int"}; {I: 4, T: "int"}]
8: [ast.ParentExpr{id: 4, location: span{from: 24, to: 25}}; {I: 4, P: 2, S: span{from: 24, to: 25}}]
tc.Type: [tc.Type{id: 4, type: "int"}; {I: 4, T: "int"}]
ast.ParentExpr: [ast.ParentExpr{id: 4, parent: 2, span: span{from: 24, to: 25}}; {I: 4, P: 2, S: span{from: 24, to: 25}}]
35: []
37: [tc.Type{id: 4, type: "int"}; {AID: 4, F: "int"}]
40: [tc.Type{id: 4, type: "int"}; {BID: 4, T: "int"}]
48: [tc.Type{id: 4, type: "int"}; {B: 4, R: "int"}]
62: [tc.Type{id: 4, type: "int"}; {B: 4, T: "int"}]
38: []
41: []
49: []
63: []
