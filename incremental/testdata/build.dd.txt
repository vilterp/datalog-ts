.table mother;
.table father;
matGramp{child: A, grandfather: C} :-
  mother{child: A, mother: B} & father{child: B, father: C}.
----
digraph G {
  "0" [label="0: Join(foo == bar)"];
  "father" [label="father"];
  "matGramp" [label="matGramp: Union"];
  "mother" [label="mother"];
  "0" -> "matGramp" [];
  "father" -> "0" [];
  "mother" -> "0" []
}

.table mother;
matAncestor{desc: D, an: A} :-
  mother{desc: D, an: A} |
  mother{desc: D, an: B} & matAncestor{desc: B, an: A}.
----
digraph G {
  "0" [label="0: Join(foo == bar)"];
  "matAncestor" [label="matAncestor: Union"];
  "mother" [label="mother"];
  "0" -> "matAncestor" [];
  "matAncestor" -> "0" [];
  "mother" -> "matAncestor" [];
  "mother" -> "0" []
}

foo{a: A} :- bar{a: A}.;
bar{a: A} :- foo{a: A}.
----
digraph G {
  "bar" [label="bar: Union"];
  "foo" [label="foo: Union"];
  "bar" -> "foo" [];
  "foo" -> "bar" []
}
