.table mother;
.table father;
matGramp{child: A, grandfather: C} :-
  mother{child: A, mother: B} & father{child: B, father: C}.
----
digraph G {
  "0" [label="0: Union"];
  "1" [label="1: Match(father{child: B, father: C})"];
  "2" [label="2: Match(mother{child: A, mother: B})"];
  "3" [label="3: Join(2 & 1)"];
  "father" [label="father"];
  "matGramp" [label="matGramp: Subst(matGramp{child: A, grandfather: C})"];
  "mother" [label="mother"];
  "0" -> "matGramp" [];
  "1" -> "3" [];
  "2" -> "3" [];
  "3" -> "0" [];
  "father" -> "1" [];
  "mother" -> "2" []
}

foo{a: A} :- bar{a: A}.;
bar{a: A} :- foo{a: A}.
----
digraph G {
  "0" [label="0: Union"];
  "1" [label="1: Match(bar{a: A})"];
  "2" [label="2: Union"];
  "3" [label="3: Match(foo{a: A})"];
  "bar" [label="bar: Subst(bar{a: A})"];
  "foo" [label="foo: Subst(foo{a: A})"];
  "0" -> "foo" [];
  "1" -> "0" [];
  "2" -> "bar" [];
  "3" -> "2" [];
  "bar" -> "1" [];
  "foo" -> "3" []
}

.table a;
.table b;
.table c;
d{} :- a{} & b{} & c{}.
----
digraph G {
  "0" [label="0: Union"];
  "1" [label="1: Match(c{})"];
  "2" [label="2: Match(b{})"];
  "3" [label="3: Join(2 & 1)"];
  "4" [label="4: Match(a{})"];
  "5" [label="5: Join(4 & 3)"];
  "a" [label="a"];
  "b" [label="b"];
  "c" [label="c"];
  "d" [label="d: Subst(d{})"];
  "0" -> "d" [];
  "1" -> "3" [];
  "2" -> "3" [];
  "3" -> "5" [];
  "4" -> "5" [];
  "5" -> "0" [];
  "a" -> "4" [];
  "b" -> "2" [];
  "c" -> "1" []
}

parent{child: C, parent: P} :-
  mother{child: C, mother: P} | father{child: C, father: P}.
----
digraph G {
  "0" [label="0: Union"];
  "1" [label="1: Match(mother{child: C, mother: P})"];
  "2" [label="2: Match(father{child: C, father: P})"];
  "parent" [label="parent: Subst(parent{child: C, parent: P})"];
  "0" -> "parent" [];
  "1" -> "0" [];
  "2" -> "0" [];
  "father" -> "2" [];
  "mother" -> "1" []
}
