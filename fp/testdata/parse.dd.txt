foo
----
application/json
{
  "type": "Var",
  "name": "foo",
  "span": {
    "from": 0,
    "to": 3
  }
}

2
----
application/json
{
  "type": "IntLit",
  "val": 2,
  "span": {
    "from": 0,
    "to": 1
  }
}

"hello"
----
application/json
{
  "type": "StringLit",
  "val": "hello",
  "span": {
    "from": 0,
    "to": 7
  }
}

myFunc(2, a, "foo")
----
application/json
{
  "type": "FuncCall",
  "func": {
    "type": "FuncCall",
    "func": {
      "type": "FuncCall",
      "func": {
        "type": "Var",
        "name": "myFunc",
        "span": {
          "from": 0,
          "to": 6
        }
      },
      "arg": {
        "type": "IntLit",
        "val": 2,
        "span": {
          "from": 7,
          "to": 8
        }
      },
      "span": {
        "from": 0,
        "to": 6
      }
    },
    "arg": {
      "type": "Var",
      "name": "a",
      "span": {
        "from": 10,
        "to": 11
      }
    },
    "span": {
      "from": 0,
      "to": 6
    }
  },
  "arg": {
    "type": "StringLit",
    "val": "foo",
    "span": {
      "from": 13,
      "to": 18
    }
  },
  "span": {
    "from": 0,
    "to": 19
  }
}

???
----
application/json
{
  "type": "Placeholder",
  "ident": "???",
  "span": {
    "from": 0,
    "to": 3
  }
}

let x = 2 in x
----
application/json
{
  "type": "Let",
  "letT": {
    "ident": "let",
    "span": {
      "from": 0,
      "to": 4
    }
  },
  "name": {
    "ident": "x",
    "span": {
      "from": 4,
      "to": 5
    }
  },
  "binding": {
    "type": "IntLit",
    "val": 2,
    "span": {
      "from": 8,
      "to": 9
    }
  },
  "inT": {
    "ident": "in",
    "span": {
      "from": 10,
      "to": 13
    }
  },
  "body": {
    "type": "Var",
    "name": "x",
    "span": {
      "from": 13,
      "to": 14
    }
  },
  "span": {
    "from": 0,
    "to": 14
  }
}

map((x: int): int => plus(x, 2), ???)
----
application/json
{
  "type": "FuncCall",
  "func": {
    "type": "FuncCall",
    "func": {
      "type": "Var",
      "name": "map",
      "span": {
        "from": 0,
        "to": 3
      }
    },
    "arg": {
      "type": "Lambda",
      "params": [
        {
          "ty": {
            "ident": "int",
            "span": {
              "from": 8,
              "to": 11
            }
          },
          "name": {
            "ident": "x",
            "span": {
              "from": 5,
              "to": 6
            }
          }
        }
      ],
      "body": {
        "type": "FuncCall",
        "func": {
          "type": "FuncCall",
          "func": {
            "type": "Var",
            "name": "plus",
            "span": {
              "from": 21,
              "to": 25
            }
          },
          "arg": {
            "type": "Var",
            "name": "x",
            "span": {
              "from": 26,
              "to": 27
            }
          },
          "span": {
            "from": 21,
            "to": 25
          }
        },
        "arg": {
          "type": "IntLit",
          "val": 2,
          "span": {
            "from": 29,
            "to": 30
          }
        },
        "span": {
          "from": 21,
          "to": 31
        }
      },
      "retType": {
        "ident": "int",
        "span": {
          "from": 14,
          "to": 17
        }
      },
      "span": {
        "from": 4,
        "to": 31
      }
    },
    "span": {
      "from": 0,
      "to": 3
    }
  },
  "arg": {
    "type": "Placeholder",
    "ident": "???",
    "span": {
      "from": 33,
      "to": 36
    }
  },
  "span": {
    "from": 0,
    "to": 37
  }
}
