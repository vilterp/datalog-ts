map((x: int): int => plus(x, 2), ???)
----
root_expr{id: 0}.
func_call{argID: 10, funcID: 1, id: 0}.
func_call{argID: 3, funcID: 2, id: 1}.
var{id: 2, name: "map"}.
lambda{body: 4, id: 3, numParams: 1, retType: "int"}.
func_call{argID: 8, funcID: 5, id: 4}.
func_call{argID: 7, funcID: 6, id: 5}.
var{id: 6, name: "plus"}.
var{id: 7, name: "x"}.
int_lit{id: 8, val: 2}.
lambda_param{idx: 0, lambdaID: 3, name: "x", ty: "int"}.
placeholder{id: 10}.

let x = map((x: int): int => plus(x, 2), ???) in filter(isEven, x)
----
root_expr{id: 0}.
let_expr{bindingID: 1, bodyID: 12, id: 0, varName: "x"}.
func_call{argID: 11, funcID: 2, id: 1}.
func_call{argID: 4, funcID: 3, id: 2}.
var{id: 3, name: "map"}.
lambda{body: 5, id: 4, numParams: 1, retType: "int"}.
func_call{argID: 9, funcID: 6, id: 5}.
func_call{argID: 8, funcID: 7, id: 6}.
var{id: 7, name: "plus"}.
var{id: 8, name: "x"}.
int_lit{id: 9, val: 2}.
lambda_param{idx: 0, lambdaID: 4, name: "x", ty: "int"}.
placeholder{id: 11}.
func_call{argID: 16, funcID: 13, id: 12}.
func_call{argID: 15, funcID: 14, id: 13}.
var{id: 14, name: "filter"}.
var{id: 15, name: "isEven"}.
var{id: 16, name: "x"}.

"foo"
----
root_expr{id: 0}.
string_lit{id: 0, val: "foo"}.

2
----
root_expr{id: 0}.
int_lit{id: 0, val: 2}.

let x = 2 in ???
----
root_expr{id: 0}.
let_expr{bindingID: 1, bodyID: 2, id: 0, varName: "x"}.
int_lit{id: 1, val: 2}.
placeholder{id: 2}.
