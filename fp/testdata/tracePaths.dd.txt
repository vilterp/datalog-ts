2
T
----
type{id: 0, type: T[]@"int"}; {T[type[]]: T[]}
  type_i{id: I[type[]]@0, type: T[type[]]@"int"}; {I[type[], type_i[or(1), and(0)]]: I[type[]]}
    int_lit{id: I[type[], type_i[or(1), and(0)]]@0, location: span{from: I[type[], type_i[or(1), and(0)]]@0, to: 1}, val: 2}
CHILD PATHS
T[]

let x = 2 in x
T
----
type{id: 0, type: T[]@"int"}; {T[type[]]: T[]}
  type_let{id: I[type[]]@0, type: T[type[]]@"int"}; {I[type[], type_let[or(4), and(0)]]: I[type[]], T[type[], type_let[or(4), and(0)]]: T[type[]]}
    let_expr{bindingID: 1, bodyID: BID[type[], type_let[or(4), and(0)]]@2, id: I[type[], type_let[or(4), and(0)]]@0, inLoc: span{from: 10, to: 13}, letLoc: span{from: I[type[], type_let[or(4), and(0)]]@0, to: 4}, location: span{from: I[type[], type_let[or(4), and(0)]]@0, to: 14}, varLoc: span{from: 4, to: 5}, varName: "x"}
    type{id: BID[type[], type_let[or(4), and(0)]]@2, type: T[type[], type_let[or(4), and(0)]]@"int"}; {I[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)]]: BID[type[], type_let[or(4), and(0)]], T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)]]: T[type[], type_let[or(4), and(0)]]}
      type_var{id: I[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)]]@2, type: T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)]]@"int"}; {I[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)]]: I[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)]], T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)]]: T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)]]}
        var{id: I[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)]]@2, location: span{from: 13, to: 14}, name: N[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)]]@"x"}
        scope_item{id: I[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)]]@2, location: span{from: 4, to: 5}, name: N[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)]]@"x", type: T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)]]@"int"}; {I[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)]]: I[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)]], N[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)]]: N[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)]], T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)]]: T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)]]}
          scope_let{id: I[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)]]@2, location: L[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)]]@span{from: 4, to: 5}, name: N[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)]]@"x", type: T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)]]@"int"}; {I[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)]]: I[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)]], L[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)]]: L[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)]], N[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)]]: N[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)]], T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)]]: T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)]]}
            let_expr{bindingID: B[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)]]@1, bodyID: I[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)]]@2, id: 0, inLoc: span{from: 10, to: 13}, letLoc: span{from: 0, to: 4}, location: span{from: 0, to: 14}, varLoc: L[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)]]@span{from: 4, to: 5}, varName: N[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)]]@"x"}
            type{id: B[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)]]@1, type: T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)]]@"int"}; {I[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)], type[or(0), and(1), and(0)]]: B[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)]], T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)], type[or(0), and(1), and(0)]]: T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)]]}
              type_i{id: I[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)], type[or(0), and(1), and(0)]]@1, type: T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)], type[or(0), and(1), and(0)]]@"int"}; {I[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)], type[or(0), and(1), and(0)], type_i[or(1), and(0)]]: I[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)], type[or(0), and(1), and(0)]]}
                int_lit{id: I[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)], type[or(0), and(1), and(0)], type_i[or(1), and(0)]]@1, location: span{from: 8, to: 9}, val: 2}
CHILD PATHS
T[]
T[type[]]
T[type[], type_let[or(4), and(0)]]
T[type[], type_let[or(4), and(0)]]
T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)]]
T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)]]
T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)]]
T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)]]
T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)]]
T[type[], type_let[or(4), and(0)], type[or(0), and(1), and(0)], type_var[or(5), and(0)], scope_item[or(0), and(1), and(0)], scope_let[or(1), and(0)]]
