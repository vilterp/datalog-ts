main :- [ws, repSep((stmt | comment), ws), ws].
stmt :- (rule | fact | tableDecl).
comment :- ["#", repSep(commentChar, "")].
tableDecl :- [tableKW, ws, record].

fact :- [record, "."].

rule :- [record, ws, ":-", ws, repSep(disjunct, [ws, "|", ws]), "."].
disjunct :- repSep(conjunct, [ws, "&", ws]).
conjunct :- (record | binExpr | negation).
negation :- ["!", record].

binExpr :- [term, ws, binOp, ws, term].
binOp :- ("<=" | ">=" | "==" | "!=").


term :- (record | int | var | string | bool | placeholder).
var :- [[A-Z], repSep(([A-Z]|alphaNum), "")].
record :- [(ident | placeholder), "{", ws, repSep(keyValue, [",", ws]), ws, "}"].
keyValue :- [(ident | placeholder), ":", ws, term].
int :- [num, repSep(num, "")].
bool :- ("true" | "false").

tableKW :- ".table".

ident :- [alpha, repSep((alphaNum | "."), "")].
string :- ["\"", repSep(stringChar, ""), "\""].
stringChar :- (^'"' | ['\', '"']).
alpha :- ([a-z] | [A-Z] | "_").
num :- [0-9].
alphaNum :- (alpha | num).
ws :- repSep((" "|"\n"), "").
placeholder :- "???".

commentChar :- ([A-Z] | [a-z] | " " | ":" | "." | "=" | "{" | "}" | "," | "-" | "'").
