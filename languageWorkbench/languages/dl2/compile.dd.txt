table post {
  author_id,
  comment: inRef(comment:post_id)
}
table comment {
  author_id,
  post_id
}
def postComment{postID: P, commentID: C} {
  post {
    id: P,
    comment {
      id: C,
    }
  }
}
----
text/plain
postComment{commentID: C, postID: P} :- post{id: P} & comment{id: C, post_id: P}

table post {
  author_id,
  comment: inRef(comment:post_id)
}
table comment {
  author_id,
  post_id
}
def selfComment{author_id: A, postID: P, commentID: C} {
  post {
    author_id: A,
    id: P,
    comment {
      id: C,
      author_id: A
    }
  }
}
----
text/plain
selfComment{author_id: A, commentID: C, postID: P} :- 
  post{author_id: A, id: P} &
  comment{author_id: A, id: C, post_id: P}

def reachable{from: A, to: C} {
  edge{from: A, to: C} |
  edge{from: A, to: B} &
  reachable{from: B, to: C}
}
----
text/plain
reachable{from: A, to: C} :- edge{from: A, to: C} | edge{from: A, to: B} & reachable{from: B, to: C}
