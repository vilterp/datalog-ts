# Var

scope.Var{scopeID: I, name: N, span: S, kind: K} :-
  var.localVar{scopeID: I, name: N, span: S, kind: K}.
var.localVar{scopeID: Statement, name: N, span: S, kind: "var"} :-
  ast.Statement{id: Statement} &
  ast.Assign{id: Assign, parentID: Statement} &
  ast.Expr{id: Expr, parentID: Assign} &
  exprVar{id: Expr, name: N, span: S}.
exprVar{id: I, name: N, span: S} :-
  varMemberAccess{id: I, name: N, span: S}.
varMemberAccess{id: Expr, name: N, span: span{from: Start, to: End}} :-
  ast.Expr{id: Expr} &
  ast.MemberAccess{id: MemberAccess, parentID: Expr, span: span{from: Start}} &
  ast.Ident{parentID: MemberAccess, text: N, span: span{from: Start, to: End}}.

# Defn

scope.Defn{scopeID: I, span: S, name: N, kind: K, type: T} :-
  defn.localVar{scopeID: I, span: S, name: N, kind: K, type: T}.

defn.localVar{scopeID: Statement, span: S, name: N, kind: "var", type: "any"} :-
  ast.Statement{id: Statement} &
  ast.Assign{id: Assign, parentID: Statement} &
  ast.Ident{parentID: Assign, span: S, text: N}.

# Parent

scope.Parent{parentID: First, childID: Second} :-
  ast.Statement{id: First} &
  ast.Statement{id: Second} &
  astInternal.next{prev: First, next: Second}.

# Highlight

hl.mapping{rule: "Ident", type: "ident"}.
hl.mapping{rule: "NumberLit", type: "number"}.
hl.mapping{rule: "BoolLit", type: "number"}.
hl.mapping{rule: "StringLit", type: "string"}.
hl.mapping{rule: "comment", type: "comment"}.
hl.mapping{rule: "addKW", type: "keyword"}.
hl.mapping{rule: "setKW", type: "keyword"}.
hl.mapping{rule: "ruleKW", type: "keyword"}.
